!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
GetBasePath	9xutool/common.go/func.go	/^func GetBasePath() string {$/;"	f
common	9xutool/common.go/func.go	/^package common$/;"	p
Get	9xutool/common.go/mgo.go	/^func (this *MgoPool) Get() *mgo.Session {$/;"	f
MgoConfig	9xutool/common.go/mgo.go	/^type MgoConfig struct {$/;"	t
MgoPool	9xutool/common.go/mgo.go	/^type MgoPool struct {$/;"	t
NewMgoPool	9xutool/common.go/mgo.go	/^func NewMgoPool(conf *MgoConfig) *MgoPool {$/;"	f
common	9xutool/common.go/mgo.go	/^package common$/;"	p
main	9xutool/main.go	/^func main() {$/;"	f
main	9xutool/main.go	/^package main$/;"	p
Do	9xutool/model/shoptrace.go	/^func (this *ShopTrace) Do(c *cli.Context) {$/;"	f
NewShopTraceCli	9xutool/model/shoptrace.go	/^func NewShopTraceCli() cli.Command {$/;"	f
ShopTrace	9xutool/model/shoptrace.go	/^type ShopTrace struct {$/;"	t
model	9xutool/model/shoptrace.go	/^package model$/;"	p
Do	9xutool/model/usertrace.go	/^func (this *UserTrace) Do(c *cli.Context) {$/;"	f
NewUserTraceCli	9xutool/model/usertrace.go	/^func NewUserTraceCli() cli.Command {$/;"	f
UserTrace	9xutool/model/usertrace.go	/^type UserTrace struct {$/;"	t
model	9xutool/model/usertrace.go	/^package model$/;"	p
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
GetSession	adtj/main.go	/^func GetSession() *mgo.Session {$/;"	f
IniFile	adtj/main.go	/^var ($/;"	v
conf	adtj/main.go	/^	err        error$/;"	v
createTjData	adtj/main.go	/^func createTjData(cate string) string {$/;"	f
err	adtj/main.go	/^	mdbsession *mgo.Session$/;"	v
getCates	adtj/main.go	/^func getCates() map[string]string {$/;"	f
init	adtj/main.go	/^func init() {$/;"	f
main	adtj/main.go	/^func main() {$/;"	f
main	adtj/main.go	/^package main$/;"	p
mdbsession	adtj/main.go	/^	mux        sync.Mutex$/;"	v
mux	adtj/main.go	/^	IniFile    *ini.File$/;"	v
main	agent/client.go	/^func main() {$/;"	f
main	agent/client.go	/^package main$/;"	p
BytesToInt	agent/protocol/pack.go	/^func BytesToInt(b []byte) int {$/;"	f
DataLengthOfLenth	agent/protocol/pack.go	/^const ($/;"	c
IntToBytes	agent/protocol/pack.go	/^func IntToBytes(n int) []byte {$/;"	f
NewProtocol	agent/protocol/pack.go	/^func NewProtocol(packetHeader string) *Protocol {$/;"	f
Packet	agent/protocol/pack.go	/^func (self *Protocol) Packet(message []byte) []byte {$/;"	f
Protocol	agent/protocol/pack.go	/^type Protocol struct {$/;"	t
ReSet	agent/protocol/pack.go	/^func (self *Protocol) ReSet(header string) {$/;"	f
Unpack	agent/protocol/pack.go	/^func (self *Protocol) Unpack(buffer []byte) (readerSlice [][]byte, bufferOver []byte) {$/;"	f
protocol	agent/protocol/pack.go	/^package protocol$/;"	p
APP_STATUS_ERROR	agent/protocol/protocol.go	/^	APP_STATUS_RUN   = "RUNNING"$/;"	c
APP_STATUS_RUN	agent/protocol/protocol.go	/^	APP_STATUS_STOP  = "STOP"$/;"	c
APP_STATUS_STOP	agent/protocol/protocol.go	/^	PROTOCOL_HEAD    = "QGWEB"$/;"	c
HealthCheck	agent/protocol/protocol.go	/^func (this *RegistrationDB) HealthCheck() {$/;"	f
NewRegistrationDB	agent/protocol/protocol.go	/^func NewRegistrationDB() (p *RegistrationDB) {$/;"	f
PROTOCOL_HEAD	agent/protocol/protocol.go	/^const ($/;"	c
PeerInfo	agent/protocol/protocol.go	/^type PeerInfo struct {$/;"	t
Programe	agent/protocol/protocol.go	/^type Programe struct {$/;"	t
ProtocolPack	agent/protocol/protocol.go	/^func ProtocolPack(data []byte) []byte {$/;"	f
ProtocolUnPack	agent/protocol/protocol.go	/^func ProtocolUnPack(data []byte) []byte {$/;"	f
Range	agent/protocol/protocol.go	/^func (this *RegistrationDB) Range() (info map[string]*Programe) {$/;"	f
Register	agent/protocol/protocol.go	/^func (this *RegistrationDB) Register(info *Programe) {$/;"	f
RegistrationDB	agent/protocol/protocol.go	/^type RegistrationDB struct {$/;"	t
UnRegister	agent/protocol/protocol.go	/^func (this *RegistrationDB) UnRegister(key string) {$/;"	f
UpdateLastTime	agent/protocol/protocol.go	/^func (this *RegistrationDB) UpdateLastTime(key string) {$/;"	f
UpdateStatus	agent/protocol/protocol.go	/^func (this *RegistrationDB) UpdateStatus(key string, status string) {$/;"	f
checkHealth	agent/protocol/protocol.go	/^func (this *RegistrationDB) checkHealth(conn *net.TCPConn) bool {$/;"	f
protocol	agent/protocol/protocol.go	/^package protocol$/;"	p
Handle	agent/server.go	/^func Handle(conn *net.TCPConn, param []byte) {$/;"	f
Show	agent/server.go	/^func Show(conn *net.TCPConn) {$/;"	f
init	agent/server.go	/^func init() {$/;"	f
main	agent/server.go	/^func main() {$/;"	f
main	agent/server.go	/^package main$/;"	p
regDB	agent/server.go	/^var ($/;"	v
GetMysqlConn	cookie/main.go	/^func GetMysqlConn() {$/;"	f
GetRedisPool	cookie/main.go	/^func GetRedisPool() *redis.Pool {$/;"	f
GetSession	cookie/main.go	/^func GetSession() *mgo.Session {$/;"	f
IniFile	cookie/main.go	/^var ($/;"	v
ReadAdvertByTag	cookie/main.go	/^func ReadAdvertByTag(tagsAry []string) []string {$/;"	f
ReadTags	cookie/main.go	/^func ReadTags() {$/;"	f
conf	cookie/main.go	/^	err        error$/;"	v
err	cookie/main.go	/^	IniFile    *ini.File$/;"	v
init	cookie/main.go	/^func init() {$/;"	f
initPutTags	cookie/main.go	/^func initPutTags() {$/;"	f
main	cookie/main.go	/^func main() {$/;"	f
main	cookie/main.go	/^package main$/;"	p
mdbsession	cookie/main.go	/^	mux        sync.Mutex$/;"	v
msqldb	cookie/main.go	/^	mdbsession *mgo.Session$/;"	v
mux	cookie/main.go	/^	conf       = flag.String("conf", "conf.ini", "配置文件")$/;"	v
ptags	cookie/main.go	/^	msqldb     *orm.QGORM$/;"	v
pushData	cookie/main.go	/^func pushData(cookie string, advertIds []string) {$/;"	f
rpool	cookie/main.go	/^	ptags      []string \/\/投放标签集合$/;"	v
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
main	httpinterface/aaa.go	/^func main() {$/;"	f
main	httpinterface/aaa.go	/^package main$/;"	p
checkMulMobileSend	httpinterface/main.go	/^func checkMulMobileSend(phone string, platform string, times int, sendfun func() error) error {$/;"	f
conf	httpinterface/main.go	/^var ($/;"	v
err	httpinterface/main.go	/^	iniFile *ini.File$/;"	v
iniFile	httpinterface/main.go	/^	conf    = flag.String("conf", "conf.ini", "配置文件")$/;"	v
init	httpinterface/main.go	/^func init() {$/;"	f
main	httpinterface/main.go	/^func main() {$/;"	f
main	httpinterface/main.go	/^package main$/;"	p
sms	httpinterface/main.go	/^func sms(w http.ResponseWriter, r *http.Request) {$/;"	f
main	httpproxy/a.go	/^package main$/;"	p
main1	httpproxy/a.go	/^func main1() {$/;"	f
main	httpproxy/main.go	/^func main() {$/;"	f
main	httpproxy/main.go	/^package main$/;"	p
area	ipku/main.go	/^var ($/;"	v
err	ipku/main.go	/^	area    = make(map[string]string)$/;"	v
getIp	ipku/main.go	/^func getIp(w http.ResponseWriter, r *http.Request) {$/;"	f
iniFile	ipku/main.go	/^	err     error$/;"	v
init	ipku/main.go	/^func init() {$/;"	f
initArea	ipku/main.go	/^func initArea() {$/;"	f
main	ipku/main.go	/^func main() {$/;"	f
main	ipku/main.go	/^package main$/;"	p
NotFound	jhstj/tj.go	/^func NotFound(w http.ResponseWriter, r *http.Request) {$/;"	f
getSession	jhstj/tj.go	/^func getSession() *mgo.Session {$/;"	f
goodsStatistics	jhstj/tj.go	/^func goodsStatistics(w http.ResponseWriter, r *http.Request) {$/;"	f
hhost	jhstj/tj.go	/^	mdbname    = flag.String("mongo-db", "jhs_tj", "mongo数据库名称")$/;"	v
hport	jhstj/tj.go	/^	hhost      = flag.String("http-host", "0.0.0.0", "http服务地址")$/;"	v
init	jhstj/tj.go	/^func init() {$/;"	f
main	jhstj/tj.go	/^func main() {$/;"	f
main	jhstj/tj.go	/^package main$/;"	p
mdbname	jhstj/tj.go	/^	mpwd       = flag.String("mongo-pwd", "juhuisuan", "mongo密码")$/;"	v
mdbsession	jhstj/tj.go	/^	hport      = flag.String("http-port", "12345", "http服务端口")$/;"	v
mhost	jhstj/tj.go	/^var ($/;"	v
mport	jhstj/tj.go	/^	mhost      = flag.String("mongo-host", "192.168.1.199", "mongo地址")$/;"	v
mpwd	jhstj/tj.go	/^	muser      = flag.String("mongo-user", "juhuisuan", "mongo用户名")$/;"	v
muser	jhstj/tj.go	/^	mport      = flag.String("mongo-port", "27017", "mongo端口")$/;"	v
mux	jhstj/tj.go	/^	mdbsession *mgo.Session$/;"	v
Revert	lib/array/revert.go	/^func Revert(ary interface{}) {$/;"	f
array	lib/array/revert.go	/^package array$/;"	p
Archive	lib/compress/tar.go	/^type Archive struct {$/;"	t
ERR_DATA_EMPTY	lib/compress/tar.go	/^const ERR_DATA_EMPTY = "压缩数据为空"$/;"	c
ERR_DST_FILE_NOT_EXIST	lib/compress/tar.go	/^const ERR_DST_FILE_NOT_EXIST = "目标文件不存在"$/;"	c
ERR_SRC_FILE_NOT_EXIST	lib/compress/tar.go	/^const ERR_SRC_FILE_NOT_EXIST = "源文件不存在"$/;"	c
GZ	lib/compress/tar.go	/^func (this *Archive) GZ() error {$/;"	f
NewArchive	lib/compress/tar.go	/^func NewArchive(src string, dst string) *Archive {$/;"	f
Save	lib/compress/tar.go	/^func (this *Archive) Save() error {$/;"	f
Tar	lib/compress/tar.go	/^func (this *Archive) Tar() error {$/;"	f
Zip	lib/compress/tar.go	/^func (this *Archive) Zip() error {$/;"	f
compress	lib/compress/tar.go	/^package compress$/;"	p
isExist	lib/compress/tar.go	/^func isExist(src string) bool {$/;"	f
ToFloat32	lib/convert/float.go	/^func ToFloat32(d interface{}) (f float32) {$/;"	f
ToFloat64	lib/convert/float.go	/^func ToFloat64(d interface{}) (f float64) {$/;"	f
convert	lib/convert/float.go	/^package convert$/;"	p
ToInt	lib/convert/int.go	/^func ToInt(d interface{}) (v int) {$/;"	f
ToInt32	lib/convert/int.go	/^func ToInt32(d interface{}) (v int32) {$/;"	f
ToInt64	lib/convert/int.go	/^func ToInt64(d interface{}) (v int64) {$/;"	f
convert	lib/convert/int.go	/^package convert$/;"	p
ToString	lib/convert/string.go	/^func ToString(d interface{}) (s string) {$/;"	f
convert	lib/convert/string.go	/^package convert$/;"	p
Aes	lib/encrypt/aes.go	/^type Aes struct {$/;"	t
Decode	lib/encrypt/aes.go	/^func (this Aes) Decode(crypted, key []byte) ([]byte, error) {$/;"	f
Encode	lib/encrypt/aes.go	/^func (this Aes) Encode(origData, key []byte) ([]byte, error) {$/;"	f
PKCS5Padding	lib/encrypt/aes.go	/^func PKCS5Padding(ciphertext []byte, blockSize int) []byte {$/;"	f
PKCS5UnPadding	lib/encrypt/aes.go	/^func PKCS5UnPadding(origData []byte) []byte {$/;"	f
encrypt	lib/encrypt/aes.go	/^package encrypt$/;"	p
Base64	lib/encrypt/base64.go	/^type Base64 struct {$/;"	t
Decode	lib/encrypt/base64.go	/^func (this Base64) Decode(source string) string {$/;"	f
Encode	lib/encrypt/base64.go	/^func (this Base64) Encode(source string) string {$/;"	f
encrypt	lib/encrypt/base64.go	/^package encrypt$/;"	p
DefaultAes	lib/encrypt/encrypt.go	/^	DefaultUrlcode UrlCode$/;"	v
DefaultBase64	lib/encrypt/encrypt.go	/^var ($/;"	v
DefaultMd5	lib/encrypt/encrypt.go	/^	DefaultBase64  Base64$/;"	v
DefaultUrlcode	lib/encrypt/encrypt.go	/^	DefaultMd5     Md5$/;"	v
EnDeCoder	lib/encrypt/encrypt.go	/^type EnDeCoder interface {$/;"	t
EnDeKeyCoder	lib/encrypt/encrypt.go	/^type EnDeKeyCoder interface {$/;"	t
Encoder	lib/encrypt/encrypt.go	/^type Encoder interface {$/;"	t
GetEnDeKeycoder	lib/encrypt/encrypt.go	/^func GetEnDeKeycoder(t string) EnDeKeyCoder {$/;"	f
GetEnDecoder	lib/encrypt/encrypt.go	/^func GetEnDecoder(t string) EnDeCoder {$/;"	f
GetEncoder	lib/encrypt/encrypt.go	/^func GetEncoder(t string) Encoder {$/;"	f
TYPE_AES	lib/encrypt/encrypt.go	/^	TYPE_URL    = "url"$/;"	c
TYPE_BASE64	lib/encrypt/encrypt.go	/^	TYPE_MD5    = "md5"$/;"	c
TYPE_MD5	lib/encrypt/encrypt.go	/^const ($/;"	c
TYPE_URL	lib/encrypt/encrypt.go	/^	TYPE_BASE64 = "base64"$/;"	c
encrypt	lib/encrypt/encrypt.go	/^package encrypt$/;"	p
Encode	lib/encrypt/md5.go	/^func (this Md5) Encode(source string) string {$/;"	f
Md5	lib/encrypt/md5.go	/^type Md5 struct {$/;"	t
encrypt	lib/encrypt/md5.go	/^package encrypt$/;"	p
BenchmarkAdd	lib/encrypt/md5_test.go	/^func BenchmarkAdd(t *testing.B) {$/;"	f
TestMd5_1	lib/encrypt/md5_test.go	/^func TestMd5_1(t *testing.T) {$/;"	f
TestMd5_2	lib/encrypt/md5_test.go	/^func TestMd5_2(t *testing.T) {$/;"	f
encrypt	lib/encrypt/md5_test.go	/^package encrypt$/;"	p
Decode	lib/encrypt/urlcode.go	/^func (this UrlCode) Decode(source string) string {$/;"	f
Encode	lib/encrypt/urlcode.go	/^func (this UrlCode) Encode(source string) string {$/;"	f
UrlCode	lib/encrypt/urlcode.go	/^type UrlCode struct {$/;"	t
encrypt	lib/encrypt/urlcode.go	/^package encrypt$/;"	p
Item	lib/grab/sort.go	/^type Item struct {$/;"	t
Len	lib/grab/sort.go	/^func (ms MapSorter) Len() int {$/;"	f
Less	lib/grab/sort.go	/^func (ms MapSorter) Less(i, j int) bool {$/;"	f
MapSorter	lib/grab/sort.go	/^type MapSorter []Item$/;"	t
NewMapSorter	lib/grab/sort.go	/^func NewMapSorter(m map[string]int) MapSorter {$/;"	f
Sort	lib/grab/sort.go	/^func (ms *MapSorter) Sort() {$/;"	f
Swap	lib/grab/sort.go	/^func (ms MapSorter) Swap(i, j int) {$/;"	f
grab	lib/grab/sort.go	/^package grab$/;"	p
GetAttrbuites	lib/grab/tao.go	/^func GetAttrbuites(p *goquery.Document) string {$/;"	f
GetCategoryId	lib/grab/tao.go	/^func GetCategoryId(h string) string {$/;"	f
GetShopBoss	lib/grab/tao.go	/^func GetShopBoss(p *goquery.Document) string {$/;"	f
GetShopBossByShop	lib/grab/tao.go	/^func GetShopBossByShop(h string) (boss string) {$/;"	f
GetShopId	lib/grab/tao.go	/^func GetShopId(p *goquery.Document) string {$/;"	f
GetShopIdByShop	lib/grab/tao.go	/^func GetShopIdByShop(p *goquery.Document) string {$/;"	f
GetShopName	lib/grab/tao.go	/^func GetShopName(p *goquery.Document) string {$/;"	f
GetShopNameByShop	lib/grab/tao.go	/^func GetShopNameByShop(p *goquery.Document) string {$/;"	f
GetShopUrl	lib/grab/tao.go	/^func GetShopUrl(p *goquery.Document) string {$/;"	f
GetTaoCategoryId	lib/grab/tao.go	/^func GetTaoCategoryId(h string) (catid string, gid string) {$/;"	f
GetTitle	lib/grab/tao.go	/^func GetTitle(p *goquery.Document) string {$/;"	f
GrabTaoHTML	lib/grab/tao.go	/^func GrabTaoHTML(url string) string {$/;"	f
In_Array	lib/grab/tao.go	/^func In_Array(list []string, k string) bool {$/;"	f
In_Array_Array	lib/grab/tao.go	/^func In_Array_Array(list []string, k []string) []string {$/;"	f
ParseNode	lib/grab/tao.go	/^func ParseNode(h string) (*goquery.Document, error) {$/;"	f
SetGrabCookie	lib/grab/tao.go	/^func SetGrabCookie(ck string) {$/;"	f
SetTransport	lib/grab/tao.go	/^func SetTransport(proxyurl string) {$/;"	f
SetUserAgent	lib/grab/tao.go	/^func SetUserAgent(ua string) {$/;"	f
buildClient	lib/grab/tao.go	/^func buildClient() *http.Client {$/;"	f
changeCharsetEncodingAuto	lib/grab/tao.go	/^func changeCharsetEncodingAuto(sor io.ReadCloser, contentTypeStr string) string {$/;"	f
client	lib/grab/tao.go	/^var ($/;"	v
grab	lib/grab/tao.go	/^package grab$/;"	p
init	lib/grab/tao.go	/^func init() {$/;"	f
Error	lib/log/log.go	/^func (this *ZLog) Error(msg string) {$/;"	f
Info	lib/log/log.go	/^func (this *ZLog) Info(msg string) {$/;"	f
NewLog	lib/log/log.go	/^func NewLog(chanSize int) *ZLog {$/;"	f
Notice	lib/log/log.go	/^func (this *ZLog) Notice(msg string) {$/;"	f
Warn	lib/log/log.go	/^func (this *ZLog) Warn(msg string) {$/;"	f
ZLog	lib/log/log.go	/^type ZLog struct {$/;"	t
log	lib/log/log.go	/^package log$/;"	p
run	lib/log/log.go	/^func (this *ZLog) run() {$/;"	f
writeMsg	lib/log/log.go	/^func (this *ZLog) writeMsg(msg string) {$/;"	f
And	lib/orm/bsql.go	/^func (this *BuildSQL) And(fields string) *BuildSQL {$/;"	f
BuildSQL	lib/orm/bsql.go	/^type BuildSQL struct {$/;"	t
Fields	lib/orm/bsql.go	/^func (this *BuildSQL) Fields(fields ...string) *BuildSQL {$/;"	f
From	lib/orm/bsql.go	/^func (this *BuildSQL) From(fields string) *BuildSQL {$/;"	f
GetSQL	lib/orm/bsql.go	/^func (this *BuildSQL) GetSQL() string {$/;"	f
Group	lib/orm/bsql.go	/^func (this *BuildSQL) Group(fields string) *BuildSQL {$/;"	f
Having	lib/orm/bsql.go	/^func (this *BuildSQL) Having(fields string) *BuildSQL {$/;"	f
Insert	lib/orm/bsql.go	/^func (this *BuildSQL) Insert(fields string) *BuildSQL {$/;"	f
Like	lib/orm/bsql.go	/^func (this *BuildSQL) Like(fields string) *BuildSQL {$/;"	f
Limit	lib/orm/bsql.go	/^func (this *BuildSQL) Limit(b ...int) *BuildSQL {$/;"	f
Or	lib/orm/bsql.go	/^func (this *BuildSQL) Or(fields string) *BuildSQL {$/;"	f
Order	lib/orm/bsql.go	/^func (this *BuildSQL) Order(fields string) *BuildSQL {$/;"	f
Reset	lib/orm/bsql.go	/^func (this *BuildSQL) Reset() *BuildSQL {$/;"	f
Select	lib/orm/bsql.go	/^func (this *BuildSQL) Select(fields ...string) *BuildSQL {$/;"	f
Set	lib/orm/bsql.go	/^func (this *BuildSQL) Set(fields ...string) *BuildSQL {$/;"	f
SetSQL	lib/orm/bsql.go	/^func (this *BuildSQL) SetSQL(sql string) {$/;"	f
Update	lib/orm/bsql.go	/^func (this *BuildSQL) Update(fields string) *BuildSQL {$/;"	f
Values	lib/orm/bsql.go	/^func (this *BuildSQL) Values(fields ...string) *BuildSQL {$/;"	f
Where	lib/orm/bsql.go	/^func (this *BuildSQL) Where(fields string) *BuildSQL {$/;"	f
orm	lib/orm/bsql.go	/^package orm$/;"	p
BSQL	lib/orm/db.go	/^func (this *QGORM) BSQL() *BuildSQL {$/;"	f
Debug	lib/orm/db.go	/^func (this *QGORM) Debug(d bool) {$/;"	f
Delete	lib/orm/db.go	/^func (this *QGORM) Delete(data ...interface{}) (int64, error) {$/;"	f
Insert	lib/orm/db.go	/^func (this *QGORM) Insert(data ...interface{}) (int64, error) {$/;"	f
LastSql	lib/orm/db.go	/^func (this *QGORM) LastSql() string {$/;"	f
NewORM	lib/orm/db.go	/^func NewORM() *QGORM {$/;"	f
Open	lib/orm/db.go	/^func (this *QGORM) Open(driveSql string) error {$/;"	f
QGORM	lib/orm/db.go	/^type QGORM struct {$/;"	t
Query	lib/orm/db.go	/^func (this *QGORM) Query(data ...interface{}) ([]map[string]string, error) {$/;"	f
SetMaxIdleConns	lib/orm/db.go	/^func (this *QGORM) SetMaxIdleConns(c int) {$/;"	f
SetMaxOpenConns	lib/orm/db.go	/^func (this *QGORM) SetMaxOpenConns(c int) {$/;"	f
Update	lib/orm/db.go	/^func (this *QGORM) Update(data ...interface{}) (int64, error) {$/;"	f
orm	lib/orm/db.go	/^package orm$/;"	p
MyServer	lib/rpc/hprose.go	/^type MyServer struct {$/;"	t
NewMyServer	lib/rpc/hprose.go	/^func NewMyServer(ser *hprose.HttpService, key string, httpkey string, httpcode string) *MyServer {$/;"	f
ServeHTTP	lib/rpc/hprose.go	/^func (this *MyServer) ServeHTTP(w http.ResponseWriter, r *http.Request) {$/;"	f
md5	lib/rpc/hprose.go	/^func (this *MyServer) md5(str string) string {$/;"	f
rpc	lib/rpc/hprose.go	/^package rpc$/;"	p
MyServiceEvent	lib/rpc/statistics.go	/^type MyServiceEvent struct {$/;"	t
OnAfterInvoke	lib/rpc/statistics.go	/^func (this *MyServiceEvent) OnAfterInvoke(name string, args []reflect.Value, byref bool, result []reflect.Value, context hprose.Context) {$/;"	f
OnBeforeInvoke	lib/rpc/statistics.go	/^func (this *MyServiceEvent) OnBeforeInvoke(name string, args []reflect.Value, byref bool, context hprose.Context) {$/;"	f
OnSendError	lib/rpc/statistics.go	/^func (this *MyServiceEvent) OnSendError(err error, context hprose.Context) {$/;"	f
OnSendHeader	lib/rpc/statistics.go	/^func (this *MyServiceEvent) OnSendHeader(c *hprose.HttpContext) {$/;"	f
rpc	lib/rpc/statistics.go	/^package rpc$/;"	p
Close	lib/ssh/connect.go	/^func (this *SSHLinker) Close() error {$/;"	f
Config	lib/ssh/connect.go	/^type Config struct {$/;"	t
GetClient	lib/ssh/connect.go	/^func (this *SSHLinker) GetClient() *ssh.Client {$/;"	f
GetPrivateKey	lib/ssh/connect.go	/^func GetPrivateKey() string {$/;"	f
NewSSHLinker	lib/ssh/connect.go	/^func NewSSHLinker(conf Config) (*SSHLinker, error) {$/;"	f
SSHLinker	lib/ssh/connect.go	/^type SSHLinker struct {$/;"	t
ssh	lib/ssh/connect.go	/^package ssh$/;"	p
AddTask	lib/task/task.go	/^func AddTask(taskname string, t Tasker) {$/;"	f
AdminTaskList	lib/task/task.go	/^var ($/;"	v
DeleteTask	lib/task/task.go	/^func DeleteTask(taskname string) {$/;"	f
GetNext	lib/task/task.go	/^func (tk *Task) GetNext() time.Time {$/;"	f
GetPrev	lib/task/task.go	/^func (tk *Task) GetPrev() time.Time {$/;"	f
GetSpec	lib/task/task.go	/^func (s *Task) GetSpec() string {$/;"	f
GetStatus	lib/task/task.go	/^func (tk *Task) GetStatus() string {$/;"	f
Len	lib/task/task.go	/^func (ms *MapSorter) Len() int { return len(ms.Keys) }$/;"	f
Less	lib/task/task.go	/^func (ms *MapSorter) Less(i, j int) bool {$/;"	f
MapSorter	lib/task/task.go	/^type MapSorter struct {$/;"	t
NewMapSorter	lib/task/task.go	/^func NewMapSorter(m map[string]Tasker) *MapSorter {$/;"	f
NewTask	lib/task/task.go	/^func NewTask(tname string, spec string, f TaskFunc) *Task {$/;"	f
Next	lib/task/task.go	/^func (s *Schedule) Next(t time.Time) time.Time {$/;"	f
Run	lib/task/task.go	/^func (tk *Task) Run() error {$/;"	f
Schedule	lib/task/task.go	/^type Schedule struct {$/;"	t
SetCron	lib/task/task.go	/^func (t *Task) SetCron(spec string) {$/;"	f
SetNext	lib/task/task.go	/^func (tk *Task) SetNext(now time.Time) {$/;"	f
SetPrev	lib/task/task.go	/^func (tk *Task) SetPrev(now time.Time) {$/;"	f
Sort	lib/task/task.go	/^func (ms *MapSorter) Sort() {$/;"	f
StartTask	lib/task/task.go	/^func StartTask() {$/;"	f
StopTask	lib/task/task.go	/^func StopTask() {$/;"	f
Swap	lib/task/task.go	/^func (ms *MapSorter) Swap(i, j int) {$/;"	f
Task	lib/task/task.go	/^type Task struct {$/;"	t
TaskFunc	lib/task/task.go	/^type TaskFunc func() error$/;"	t
Tasker	lib/task/task.go	/^type Tasker interface {$/;"	t
all	lib/task/task.go	/^func all(r bounds) uint64 {$/;"	f
bounds	lib/task/task.go	/^type bounds struct {$/;"	t
changed	lib/task/task.go	/^	stop          chan bool$/;"	v
dayMatches	lib/task/task.go	/^func dayMatches(s *Schedule, t time.Time) bool {$/;"	f
days	lib/task/task.go	/^	hours         = bounds{0, 23, nil}$/;"	v
getBits	lib/task/task.go	/^func getBits(min, max, step uint) uint64 {$/;"	f
getField	lib/task/task.go	/^func getField(field string, r bounds) uint64 {$/;"	f
getRange	lib/task/task.go	/^func getRange(expr string, r bounds) uint64 {$/;"	f
hours	lib/task/task.go	/^	minutes       = bounds{0, 59, nil}$/;"	v
init	lib/task/task.go	/^func init() {$/;"	f
isstart	lib/task/task.go	/^	changed       chan bool$/;"	v
minutes	lib/task/task.go	/^	seconds       = bounds{0, 59, nil}$/;"	v
months	lib/task/task.go	/^	days          = bounds{1, 31, nil}$/;"	v
mustParseInt	lib/task/task.go	/^func mustParseInt(expr string) uint {$/;"	f
parse	lib/task/task.go	/^func (t *Task) parse(spec string) *Schedule {$/;"	f
parseIntOrName	lib/task/task.go	/^func parseIntOrName(expr string, names map[string]uint) uint {$/;"	f
parseSpec	lib/task/task.go	/^func (t *Task) parseSpec(spec string) *Schedule {$/;"	f
run	lib/task/task.go	/^func run() {$/;"	f
seconds	lib/task/task.go	/^	isstart       bool$/;"	v
starBit	lib/task/task.go	/^const ($/;"	c
stop	lib/task/task.go	/^	AdminTaskList map[string]Tasker$/;"	v
task	lib/task/task.go	/^package task$/;"	p
taskerr	lib/task/task.go	/^type taskerr struct {$/;"	t
weeks	lib/task/task.go	/^	}}$/;"	v
CreateXlsx	lib/xlsx/simple.go	/^func CreateXlsx(fileName string, headers []string, list [][]string) {$/;"	f
xlsx	lib/xlsx/simple.go	/^package xlsx$/;"	p
Cate	main.go	/^type Cate struct {$/;"	t
GetRSession	main.go	/^func GetRSession(c *ssh.Client) *mgo.Session {$/;"	f
GetSession	main.go	/^func GetSession() *mgo.Session {$/;"	f
getMongo	main.go	/^func getMongo(url string, f func() (net.Conn, error)) (*mgo.Session, error) {$/;"	f
getSubCat	main.go	/^func getSubCat(c *ssh.Client) []Cate {$/;"	f
main	main.go	/^func main() {$/;"	f
main	main.go	/^package main$/;"	p
mdbsession	main.go	/^var ($/;"	v
mo_db	main.go	/^	mo_port    = "27017"$/;"	v
mo_host	main.go	/^	mo_pwd     = "123456"$/;"	v
mo_port	main.go	/^	mo_host    = "192.168.1.199"$/;"	v
mo_pwd	main.go	/^	mo_user    = "xu"$/;"	v
mo_table	main.go	/^	mo_db      = "xu_precise"$/;"	v
mo_user	main.go	/^	mdbsession *mgo.Session$/;"	v
pemBytes	main.go	/^var ($/;"	v
Add	mgrab/grab.go	/^func (this *GrabFactory) Add(node *DockerNode) {$/;"	f
DockerNode	mgrab/grab.go	/^type DockerNode struct {$/;"	t
Goods	mgrab/grab.go	/^type Goods map[string]interface{}$/;"	t
Grab	mgrab/grab.go	/^func (this *GrabFactory) Grab(fun func(string) Goods) {$/;"	f
GrabFactory	mgrab/grab.go	/^type GrabFactory struct {$/;"	t
NewFactory	mgrab/grab.go	/^func NewFactory(size int, csize int) *GrabFactory {$/;"	f
Push	mgrab/grab.go	/^func (this *GrabFactory) Push() {$/;"	f
main	mgrab/grab.go	/^package main$/;"	p
MapGoods	mgrab/main.go	/^type MapGoods struct {$/;"	t
NewMapGoods	mgrab/main.go	/^func NewMapGoods(length int) *MapGoods {$/;"	f
QueueData	mgrab/main.go	/^type QueueData struct {$/;"	t
bootstrapNsq	mgrab/main.go	/^func bootstrapNsq(px string) {$/;"	f
conf	mgrab/main.go	/^	iniFile     *ini.File$/;"	v
dealCount	mgrab/main.go	/^	recvCount   uint64$/;"	v
dispath	mgrab/main.go	/^func dispath(data url.Values, px string) {$/;"	f
err	mgrab/main.go	/^	conf        = flag.String("conf", "conf.ini", "conf.ini")$/;"	v
grabFactory	mgrab/main.go	/^	err         error$/;"	v
iniFile	mgrab/main.go	/^var ($/;"	v
init	mgrab/main.go	/^func init() {$/;"	f
main	mgrab/main.go	/^func main() {$/;"	f
main	mgrab/main.go	/^package main$/;"	p
recvCount	mgrab/main.go	/^	grabFactory *GrabFactory$/;"	v
GetSession	mgrab/model.go	/^func GetSession() *mgo.Session {$/;"	f
GrabGoodsInfo	mgrab/model.go	/^func GrabGoodsInfo(gid string) (info map[string]interface{}) {$/;"	f
HandleMessage	mgrab/model.go	/^func (this NSQHandler) HandleMessage(message *nsq.Message) error {$/;"	f
NSQHandler	mgrab/model.go	/^type NSQHandler struct {$/;"	t
WaitGroup	mgrab/model.go	/^type WaitGroup struct {$/;"	t
Wrap	mgrab/model.go	/^func (this *WaitGroup) Wrap(f func(p ...interface{}), param ...interface{}) {$/;"	f
cateList	mgrab/model.go	/^	peoplemap   map[string]int = map[string]int{"青年": 0, "孕妇": 1, "中老年": 2, "儿童": 3, "青少年": 4, "婴儿": 5}$/;"	v
checkGoodsExist	mgrab/model.go	/^func checkGoodsExist(gid string) (res map[string]interface{}, err error) {$/;"	f
checkProxyHealth	mgrab/model.go	/^func checkProxyHealth() {$/;"	f
getHttpProxy	mgrab/model.go	/^func getHttpProxy() string {$/;"	f
httpproxys	mgrab/model.go	/^	useragents  []string$/;"	v
httpsqsQueue	mgrab/model.go	/^func httpsqsQueue(px string) url.Values {$/;"	f
initCateInfo	mgrab/model.go	/^func initCateInfo() {$/;"	f
initGrabFactory	mgrab/model.go	/^func initGrabFactory() {$/;"	f
initHttpProxy	mgrab/model.go	/^func initHttpProxy() {$/;"	f
initNsqConn	mgrab/model.go	/^func initNsqConn() {$/;"	f
main	mgrab/model.go	/^package main$/;"	p
mdbsession	mgrab/model.go	/^	mux         sync.Mutex$/;"	v
mux	mgrab/model.go	/^var ($/;"	v
nsqproducer	mgrab/model.go	/^	cateList    map[string]map[string]interface{}$/;"	v
peoplemap	mgrab/model.go	/^	sexmap      map[string]int = map[string]int{"中性": 0, "男": 1, "女": 2}$/;"	v
pushMsgToNsq	mgrab/model.go	/^func pushMsgToNsq(data []byte) {$/;"	f
sexmap	mgrab/model.go	/^	mdbsession  *mgo.Session$/;"	v
useragents	mgrab/model.go	/^	nsqproducer *nsq.Producer$/;"	v
CronJob	monitor/crontab.go	/^func CronJob(w http.ResponseWriter, r *http.Request) {$/;"	f
Crontab	monitor/crontab.go	/^type Crontab struct {$/;"	t
ExecCrontabs	monitor/crontab.go	/^type ExecCrontabs struct {$/;"	t
GetSession	monitor/crontab.go	/^func GetSession() *mgo.Session {$/;"	f
ReceiveCronJob	monitor/crontab.go	/^func ReceiveCronJob(w http.ResponseWriter, r *http.Request) {$/;"	f
getData	monitor/crontab.go	/^func getData(date string) []ExecCrontabs {$/;"	f
main	monitor/crontab.go	/^package main$/;"	p
mdbsession	monitor/crontab.go	/^var ($/;"	v
mux	monitor/crontab.go	/^	mdbsession *mgo.Session$/;"	v
readCrontabIniData	monitor/crontab.go	/^func readCrontabIniData() []Crontab {$/;"	f
ProgramHealth	monitor/main.go	/^type ProgramHealth struct {$/;"	t
conf	monitor/main.go	/^	iniFile   *ini.File$/;"	v
err	monitor/main.go	/^	sshClient *ssh.Client$/;"	v
exePath	monitor/main.go	/^	err       error$/;"	v
iniFile	monitor/main.go	/^var ($/;"	v
init	monitor/main.go	/^func init() {$/;"	f
initSSH	monitor/main.go	/^func initSSH() {$/;"	f
main	monitor/main.go	/^func main() {$/;"	f
main	monitor/main.go	/^package main$/;"	p
proHealth	monitor/main.go	/^func proHealth(w http.ResponseWriter, r *http.Request) {$/;"	f
readConfData	monitor/main.go	/^func readConfData() {$/;"	f
runSSH	monitor/main.go	/^func runSSH(ps string) (string, error) {$/;"	f
sshClient	monitor/main.go	/^	conf      = flag.String("conf", "conf.ini", "config file")$/;"	v
HandleMessage	mtags/main.go	/^func (th *TailHandler) HandleMessage(m *nsq.Message) error {$/;"	f
TailHandler	mtags/main.go	/^type TailHandler struct {$/;"	t
bootstrap	mtags/main.go	/^func bootstrap() {$/;"	f
conf	mtags/main.go	/^var ($/;"	v
dealCount	mtags/main.go	/^	recvCount uint64$/;"	v
iniFile	mtags/main.go	/^	conf      = flag.String("conf", "conf.ini", "配置文件")$/;"	v
init	mtags/main.go	/^func init() {$/;"	f
main	mtags/main.go	/^func main() {$/;"	f
main	mtags/main.go	/^package main$/;"	p
recvCount	mtags/main.go	/^	iniFile   *ini.File$/;"	v
AddUidCids	mtags/model.go	/^func AddUidCids(param map[string]string) {$/;"	f
CombinationData	mtags/model.go	/^type CombinationData struct {$/;"	t
GetPutSession	mtags/model.go	/^func GetPutSession() *mgo.Session {$/;"	f
GetSession	mtags/model.go	/^func GetSession() *mgo.Session {$/;"	f
Goods	mtags/model.go	/^type Goods struct {$/;"	t
UserLocus	mtags/model.go	/^type UserLocus struct {$/;"	t
addGoods	mtags/model.go	/^func addGoods(g Goods) {$/;"	f
addShop	mtags/model.go	/^func addShop(g Goods) {$/;"	f
dispath	mtags/model.go	/^func dispath(data *CombinationData) {$/;"	f
main	mtags/model.go	/^package main$/;"	p
mdbputsession	mtags/model.go	/^	mdbsession    *mgo.Session$/;"	v
mdbsession	mtags/model.go	/^var ($/;"	v
mux	mtags/model.go	/^	mdbputsession *mgo.Session$/;"	v
tagFrequencyRecord	mtags/model.go	/^func tagFrequencyRecord(cookie string, cids string) {$/;"	f
userLocusCombine	mtags/model.go	/^func userLocusCombine(ul UserLocus) {$/;"	f
main	qianzhao-tcpserver/a.go	/^package main$/;"	p
main1	qianzhao-tcpserver/a.go	/^func main1() {$/;"	f
show	qianzhao-tcpserver/a.go	/^func show(list map[string]*server.Account) {$/;"	f
MRequest	qianzhao-tcpserver/client/a.go	/^func MRequest(req *Request) ([]byte, error) {$/;"	f
MRespond	qianzhao-tcpserver/client/a.go	/^func MRespond(req *Respond) ([]byte, error) {$/;"	f
PROTOCOL_HEAD	qianzhao-tcpserver/client/a.go	/^const ($/;"	c
ProtocolPack	qianzhao-tcpserver/client/a.go	/^func ProtocolPack(data []byte) []byte {$/;"	f
ProtocolUnPack	qianzhao-tcpserver/client/a.go	/^func ProtocolUnPack(data []byte) []byte {$/;"	f
Request	qianzhao-tcpserver/client/a.go	/^type Request struct {$/;"	t
Respond	qianzhao-tcpserver/client/a.go	/^type Respond struct {$/;"	t
UmRequest	qianzhao-tcpserver/client/a.go	/^func UmRequest(data []byte) (Request, error) {$/;"	f
UnRespond	qianzhao-tcpserver/client/a.go	/^func UnRespond(data []byte) (Request, error) {$/;"	f
main	qianzhao-tcpserver/client/a.go	/^func main() {$/;"	f
main	qianzhao-tcpserver/client/a.go	/^package main$/;"	p
MRequest	qianzhao-tcpserver/client/client.go	/^func MRequest(req *Request) ([]byte, error) {$/;"	f
MRespond	qianzhao-tcpserver/client/client.go	/^func MRespond(req *Respond) ([]byte, error) {$/;"	f
PROTOCOL_HEAD	qianzhao-tcpserver/client/client.go	/^const ($/;"	c
ProtocolPack	qianzhao-tcpserver/client/client.go	/^func ProtocolPack(data []byte) []byte {$/;"	f
ProtocolUnPack	qianzhao-tcpserver/client/client.go	/^func ProtocolUnPack(data []byte) []byte {$/;"	f
Request	qianzhao-tcpserver/client/client.go	/^type Request struct {$/;"	t
Respond	qianzhao-tcpserver/client/client.go	/^type Respond struct {$/;"	t
UmRequest	qianzhao-tcpserver/client/client.go	/^func UmRequest(data []byte) (Request, error) {$/;"	f
UnRespond	qianzhao-tcpserver/client/client.go	/^func UnRespond(data []byte) (Request, error) {$/;"	f
main	qianzhao-tcpserver/client/client.go	/^func main() {$/;"	f
main	qianzhao-tcpserver/client/client.go	/^package main$/;"	p
Config	qianzhao-tcpserver/common/config/config.go	/^var ($/;"	v
GetDB	qianzhao-tcpserver/common/config/config.go	/^func GetDB() *ini.Section {$/;"	f
GetDefault	qianzhao-tcpserver/common/config/config.go	/^func GetDefault() *ini.Section {$/;"	f
GetInterface	qianzhao-tcpserver/common/config/config.go	/^func GetInterface() *ini.Section {$/;"	f
GetRedis	qianzhao-tcpserver/common/config/config.go	/^func GetRedis() *ini.Section {$/;"	f
config	qianzhao-tcpserver/common/config/config.go	/^package config$/;"	p
err	qianzhao-tcpserver/common/config/config.go	/^	Config *ini.File$/;"	v
init	qianzhao-tcpserver/common/config/config.go	/^func init() {$/;"	f
CheckBcrypt	qianzhao-tcpserver/common/function/func.go	/^func CheckBcrypt(data []byte, pwd []byte) bool {$/;"	f
GetBasePath	qianzhao-tcpserver/common/function/func.go	/^func GetBasePath() string {$/;"	f
GetBcrypt	qianzhao-tcpserver/common/function/func.go	/^func GetBcrypt(data []byte) string {$/;"	f
GetIP	qianzhao-tcpserver/common/function/func.go	/^func GetIP(ctx *echo.Context) string {$/;"	f
GetPost	qianzhao-tcpserver/common/function/func.go	/^func GetPost(ctx *echo.Context, name string) string {$/;"	f
GetRand	qianzhao-tcpserver/common/function/func.go	/^func GetRand(b int, e int) int {$/;"	f
GetTimeUnix	qianzhao-tcpserver/common/function/func.go	/^func GetTimeUnix() string {$/;"	f
function	qianzhao-tcpserver/common/function/func.go	/^package function$/;"	p
CONTROLLER_CODE_ERROR	qianzhao-tcpserver/common/global/const.go	/^const ($/;"	c
CONTROLLER_CODE_SUCCESS	qianzhao-tcpserver/common/global/const.go	/^	CONTROLLER_CODE_ERROR   = "3xx"$/;"	c
CONTROLLER_EBIT_NOPARAM	qianzhao-tcpserver/common/global/const.go	/^const ($/;"	c
CONTROLLER_EBIT_NOSPEEDUPCONDITION	qianzhao-tcpserver/common/global/const.go	/^	CONTROLLER_EBIT_REQUEST_TIMEOUT    = "抱歉，本次请求超时，请稍后重试"$/;"	c
CONTROLLER_EBIT_REQUESTFAILE	qianzhao-tcpserver/common/global/const.go	/^	CONTROLLER_EBIT_NOPARAM            = "缺少参数!"$/;"	c
CONTROLLER_EBIT_REQUEST_TIMEOUT	qianzhao-tcpserver/common/global/const.go	/^	CONTROLLER_EBIT_SPEEDTFAILE        = "提速失败!!!"$/;"	c
CONTROLLER_EBIT_SIGNERROR	qianzhao-tcpserver/common/global/const.go	/^	CONTROLLER_EBIT_NOSPEEDUPCONDITION = "抱歉，您的运行环境不符合加速条件"$/;"	c
CONTROLLER_EBIT_SPEEDTFAILE	qianzhao-tcpserver/common/global/const.go	/^	CONTROLLER_EBIT_REQUESTFAILE       = "请求失败!"$/;"	c
CONTROLLER_FAVORITE_NOCONTENT	qianzhao-tcpserver/common/global/const.go	/^const ($/;"	c
CONTROLLER_FAVORITE_NOUPLOADCONTENT	qianzhao-tcpserver/common/global/const.go	/^	CONTROLLER_FAVORITE_NOCONTENT       = "无内容!"$/;"	c
CONTROLLER_INTERFACE_ERROR_CODE_DATA	qianzhao-tcpserver/common/global/const.go	/^	CONTROLLER_INTERFACE_ERROR_MSG_PROGRAM  = "对不起，接口程序发生异常，请稍后再试"$/;"	c
CONTROLLER_INTERFACE_ERROR_CODE_HEADER	qianzhao-tcpserver/common/global/const.go	/^const ($/;"	c
CONTROLLER_INTERFACE_ERROR_CODE_PROGRAM	qianzhao-tcpserver/common/global/const.go	/^	CONTROLLER_INTERFACE_ERROR_MSG_HEADER   = "对不起，您无权限访问"$/;"	c
CONTROLLER_INTERFACE_ERROR_MSG_DATA	qianzhao-tcpserver/common/global/const.go	/^	CONTROLLER_INTERFACE_ERROR_CODE_DATA    = "1003"$/;"	c
CONTROLLER_INTERFACE_ERROR_MSG_HEADER	qianzhao-tcpserver/common/global/const.go	/^	CONTROLLER_INTERFACE_ERROR_CODE_HEADER  = "1001"$/;"	c
CONTROLLER_INTERFACE_ERROR_MSG_PROGRAM	qianzhao-tcpserver/common/global/const.go	/^	CONTROLLER_INTERFACE_ERROR_CODE_PROGRAM = "1002"$/;"	c
CONTROLLER_USER_BANDWITH_ACTIONERROR	qianzhao-tcpserver/common/global/const.go	/^	CONTROLLER_USER_NEEDLOGIN                 = "need login!"$/;"	c
CONTROLLER_USER_BANDWITH_BANDWITHERROR	qianzhao-tcpserver/common/global/const.go	/^	CONTROLLER_USER_BANDWITH_ACTIONERROR      = "action wrong!"$/;"	c
CONTROLLER_USER_BANDWITH_BANDWITHPWDERROR	qianzhao-tcpserver/common/global/const.go	/^	CONTROLLER_USER_BANDWITH_BANDWITHERROR    = "bandwith wrong!"$/;"	c
CONTROLLER_USER_BANDWITH_NEEDAPPUID	qianzhao-tcpserver/common/global/const.go	/^	CONTROLLER_USER_BANDWITH_NOMESSAGE        = "No message!"$/;"	c
CONTROLLER_USER_BANDWITH_NOMESSAGE	qianzhao-tcpserver/common/global/const.go	/^	CONTROLLER_USER_BANDWITH_BANDWITHPWDERROR = "bandwith_pwd wrong"$/;"	c
CONTROLLER_USER_BANDWITH_NOTEXISTBRAND	qianzhao-tcpserver/common/global/const.go	/^	CONTROLLER_USER_BANDWITH_NEEDAPPUID       = "需要请求参数app_uid"$/;"	c
CONTROLLER_USER_CHECK_ERROR	qianzhao-tcpserver/common/global/const.go	/^	CONTROLLER_USER_LOGIN_SUCCESS             = "用户登录成功"$/;"	c
CONTROLLER_USER_LOGINOUT	qianzhao-tcpserver/common/global/const.go	/^	CONTROLLER_USER_LOGIN_FIRST               = "请先登陆!"$/;"	c
CONTROLLER_USER_LOGIN_FIRST	qianzhao-tcpserver/common/global/const.go	/^	CONTROLLER_USER_REGISTER_ERROR            = "注册失败!"$/;"	c
CONTROLLER_USER_LOGIN_SUCCESS	qianzhao-tcpserver/common/global/const.go	/^	CONTROLLER_USER_NOT_EXIST                 = "用户名不存在,请注册或者联系客服!"$/;"	c
CONTROLLER_USER_NEEDLOGIN	qianzhao-tcpserver/common/global/const.go	/^	CONTROLLER_USER_LOGINOUT                  = "用户已注销!"$/;"	c
CONTROLLER_USER_NOT_EXIST	qianzhao-tcpserver/common/global/const.go	/^const ($/;"	c
CONTROLLER_USER_REGISTER_ERROR	qianzhao-tcpserver/common/global/const.go	/^	CONTROLLER_USER_REGISTER_SUCCESS          = "注册成功!"$/;"	c
CONTROLLER_USER_REGISTER_REF_ERROR	qianzhao-tcpserver/common/global/const.go	/^	CONTROLLER_USER_REGISTER_REF_SUCCESS      = "注册或关联成功!"$/;"	c
CONTROLLER_USER_REGISTER_REF_SUCCESS	qianzhao-tcpserver/common/global/const.go	/^	CONTROLLER_USER_USERNAME_EXIST_ERROR      = "该邮箱已被注册使用!"$/;"	c
CONTROLLER_USER_REGISTER_SUCCESS	qianzhao-tcpserver/common/global/const.go	/^	CONTROLLER_USER_REGISTER_REF_ERROR        = "一些不知名的错误,注册或关联失败!"$/;"	c
CONTROLLER_USER_USERNAME_EXIST_ERROR	qianzhao-tcpserver/common/global/const.go	/^	CONTROLLER_USER_USERPWD_ERROR             = "用户名或密码错误!"$/;"	c
CONTROLLER_USER_USERPWD_ERROR	qianzhao-tcpserver/common/global/const.go	/^	CONTROLLER_USER_CHECK_ERROR               = "验证出错!"$/;"	c
SESSION_USER_INFO	qianzhao-tcpserver/common/global/const.go	/^const ($/;"	c
global	qianzhao-tcpserver/common/global/const.go	/^package global$/;"	p
UserBody	qianzhao-tcpserver/common/global/struct.go	/^type UserBody struct {$/;"	t
UserEnvelope	qianzhao-tcpserver/common/global/struct.go	/^type UserEnvelope struct {$/;"	t
getUserProductResponse	qianzhao-tcpserver/common/global/struct.go	/^type getUserProductResponse struct {$/;"	t
global	qianzhao-tcpserver/common/global/struct.go	/^package global$/;"	p
Get	qianzhao-tcpserver/common/redis/redis.go	/^func Get() redis.Conn {$/;"	f
init	qianzhao-tcpserver/common/redis/redis.go	/^func init() {$/;"	f
pool	qianzhao-tcpserver/common/redis/redis.go	/^var ($/;"	v
redis	qianzhao-tcpserver/common/redis/redis.go	/^package redis$/;"	p
GetSession	qianzhao-tcpserver/common/session/session.go	/^func GetSession(ctx *echo.Context) (session.SessionStore, error) {$/;"	f
globalSessions	qianzhao-tcpserver/common/session/session.go	/^var globalSessions *session.Manager$/;"	v
init	qianzhao-tcpserver/common/session/session.go	/^func init() {$/;"	f
session	qianzhao-tcpserver/common/session/session.go	/^package session$/;"	p
Fatalln	qianzhao-tcpserver/logger/log.go	/^func (l *Logger) Fatalln(args ...interface{}) {$/;"	f
Logger	qianzhao-tcpserver/logger/log.go	/^type Logger struct {$/;"	t
New	qianzhao-tcpserver/logger/log.go	/^func New(prefix string) *Logger {$/;"	f
Printf	qianzhao-tcpserver/logger/log.go	/^func (l *Logger) Printf(format string, args ...interface{}) {$/;"	f
Println	qianzhao-tcpserver/logger/log.go	/^func (l *Logger) Println(args ...interface{}) {$/;"	f
logger	qianzhao-tcpserver/logger/log.go	/^package logger$/;"	p
main	qianzhao-tcpserver/main.go	/^func main() {$/;"	f
main	qianzhao-tcpserver/main.go	/^package main$/;"	p
AddRecord	qianzhao-tcpserver/model/brandaccount_record.go	/^func (this *BrandAccountRecord) AddRecord(info BrandAccountRecord) bool {$/;"	f
BROADRECORD_TABLE_NAME	qianzhao-tcpserver/model/brandaccount_record.go	/^const ($/;"	c
BrandAccountRecord	qianzhao-tcpserver/model/brandaccount_record.go	/^type BrandAccountRecord struct {$/;"	t
model	qianzhao-tcpserver/model/brandaccount_record.go	/^package model$/;"	p
AccountExist	qianzhao-tcpserver/model/brandaccout.go	/^func (this *BrandAccount) AccountExist(ba BrandAccount) bool {$/;"	f
AddBroadBand	qianzhao-tcpserver/model/brandaccout.go	/^func (this *BrandAccount) AddBroadBand(ba BrandAccount) bool {$/;"	f
BROAD_TABLE_NAME	qianzhao-tcpserver/model/brandaccout.go	/^const ($/;"	c
BrandAccount	qianzhao-tcpserver/model/brandaccout.go	/^type BrandAccount struct {$/;"	t
EditAccount	qianzhao-tcpserver/model/brandaccout.go	/^func (this *BrandAccount) EditAccount(ba BrandAccount) bool {$/;"	f
GetAccountInfo	qianzhao-tcpserver/model/brandaccout.go	/^func (this *BrandAccount) GetAccountInfo(account string) (BrandAccount, error) {$/;"	f
model	qianzhao-tcpserver/model/brandaccout.go	/^package model$/;"	p
init	qianzhao-tcpserver/model/init.go	/^func init() {$/;"	f
model	qianzhao-tcpserver/model/init.go	/^package model$/;"	p
myorm	qianzhao-tcpserver/model/init.go	/^var ($/;"	v
GetBrandWith	qianzhao-tcpserver/model/user.go	/^func (this *User) GetBrandWith(app_uid string) (u User) {$/;"	f
USER_TABLE_NAME	qianzhao-tcpserver/model/user.go	/^const ($/;"	c
Update	qianzhao-tcpserver/model/user.go	/^func (this *User) Update(values map[string]interface{}, wheres map[string]interface{}) bool {$/;"	f
User	qianzhao-tcpserver/model/user.go	/^type User struct {$/;"	t
UserExist	qianzhao-tcpserver/model/user.go	/^func (this *User) UserExist(name string, pwd string) bool {$/;"	f
UserInfo	qianzhao-tcpserver/model/user.go	/^func (this *User) UserInfo(name string) (u User) {$/;"	f
UserNameExist	qianzhao-tcpserver/model/user.go	/^func (this *User) UserNameExist(name string) bool {$/;"	f
UserRegister	qianzhao-tcpserver/model/user.go	/^func (this *User) UserRegister(name string, password string) bool {$/;"	f
VerifyBandWith	qianzhao-tcpserver/model/user.go	/^func (this *User) VerifyBandWith(bandwith string, bandwith_pwd string) (app_uid string) {$/;"	f
make_app_uid	qianzhao-tcpserver/model/user.go	/^func make_app_uid(bandwith string, bandwith_pwd string, timestamp string) string {$/;"	f
model	qianzhao-tcpserver/model/user.go	/^package model$/;"	p
BytesToInt	qianzhao-tcpserver/protocol/p.go	/^func BytesToInt(b []byte) int {$/;"	f
DataLengthOfLenth	qianzhao-tcpserver/protocol/p.go	/^const ($/;"	c
IntToBytes	qianzhao-tcpserver/protocol/p.go	/^func IntToBytes(n int) []byte {$/;"	f
NewProtocol	qianzhao-tcpserver/protocol/p.go	/^func NewProtocol(packetHeader string) *Protocol {$/;"	f
Packet	qianzhao-tcpserver/protocol/p.go	/^func (self *Protocol) Packet(message []byte) []byte {$/;"	f
Protocol	qianzhao-tcpserver/protocol/p.go	/^type Protocol struct {$/;"	t
ReSet	qianzhao-tcpserver/protocol/p.go	/^func (self *Protocol) ReSet(header string) {$/;"	f
Unpack	qianzhao-tcpserver/protocol/p.go	/^func (self *Protocol) Unpack(buffer []byte) (readerSlice [][]byte, bufferOver []byte) {$/;"	f
protocol	qianzhao-tcpserver/protocol/p.go	/^package protocol$/;"	p
Account	qianzhao-tcpserver/server/broadbrand.go	/^type Account struct {$/;"	t
AccountManager	qianzhao-tcpserver/server/broadbrand.go	/^type AccountManager struct {$/;"	t
Add	qianzhao-tcpserver/server/broadbrand.go	/^func (this *AccountManager) Add(user *Account) {$/;"	f
Del	qianzhao-tcpserver/server/broadbrand.go	/^func (this *AccountManager) Del(name string) {$/;"	f
Edit	qianzhao-tcpserver/server/broadbrand.go	/^func (this *AccountManager) Edit(user *Account) {$/;"	f
Get	qianzhao-tcpserver/server/broadbrand.go	/^func (this *AccountManager) Get(name string) *Account {$/;"	f
NewAccountManager	qianzhao-tcpserver/server/broadbrand.go	/^func NewAccountManager(log *logger.Logger) *AccountManager {$/;"	f
Range	qianzhao-tcpserver/server/broadbrand.go	/^func (this *AccountManager) Range() map[string]*Account {$/;"	f
TimeCheckAccountUTime	qianzhao-tcpserver/server/broadbrand.go	/^func (this *AccountManager) TimeCheckAccountUTime(fun func(name string)) {$/;"	f
TimeFlushDisk	qianzhao-tcpserver/server/broadbrand.go	/^func (this *AccountManager) TimeFlushDisk(fileName string) {$/;"	f
septime	qianzhao-tcpserver/server/broadbrand.go	/^var ($/;"	v
server	qianzhao-tcpserver/server/broadbrand.go	/^package server$/;"	p
AccountConnManager	qianzhao-tcpserver/server/connections.go	/^type AccountConnManager struct {$/;"	t
Add	qianzhao-tcpserver/server/connections.go	/^func (cm *ConnectionManager) Add(delta int) {$/;"	f
Add	qianzhao-tcpserver/server/connections.go	/^func (this *AccountConnManager) Add(name string, conn *net.TCPConn) {$/;"	f
ConnectionManager	qianzhao-tcpserver/server/connections.go	/^type ConnectionManager struct {$/;"	t
Count	qianzhao-tcpserver/server/connections.go	/^func (this *AccountConnManager) Count() int {$/;"	f
Del	qianzhao-tcpserver/server/connections.go	/^func (this *AccountConnManager) Del(name string) {$/;"	f
Done	qianzhao-tcpserver/server/connections.go	/^func (cm *ConnectionManager) Done() {$/;"	f
Get	qianzhao-tcpserver/server/connections.go	/^func (this *AccountConnManager) Get(name string) *net.TCPConn {$/;"	f
MRequest	qianzhao-tcpserver/server/connections.go	/^func MRequest(req *Request) ([]byte, error) {$/;"	f
MRespond	qianzhao-tcpserver/server/connections.go	/^func MRespond(req *Respond) ([]byte, error) {$/;"	f
NewAccountConnManager	qianzhao-tcpserver/server/connections.go	/^func NewAccountConnManager() *AccountConnManager {$/;"	f
NewConnectionManager	qianzhao-tcpserver/server/connections.go	/^func NewConnectionManager() *ConnectionManager {$/;"	f
Ping	qianzhao-tcpserver/server/connections.go	/^func (this *AccountConnManager) Ping(fun func(name string)) {$/;"	f
Request	qianzhao-tcpserver/server/connections.go	/^type Request struct {$/;"	t
Respond	qianzhao-tcpserver/server/connections.go	/^type Respond struct {$/;"	t
UmRequest	qianzhao-tcpserver/server/connections.go	/^func UmRequest(data []byte) (Request, error) {$/;"	f
UnRespond	qianzhao-tcpserver/server/connections.go	/^func UnRespond(data []byte) (Request, error) {$/;"	f
server	qianzhao-tcpserver/server/connections.go	/^package server$/;"	p
DealData	qianzhao-tcpserver/server/error.go	/^func DealData(data []byte) {$/;"	f
GetLastFile	qianzhao-tcpserver/server/error.go	/^func GetLastFile(dir string) []byte {$/;"	f
server	qianzhao-tcpserver/server/error.go	/^package server$/;"	p
Event	qianzhao-tcpserver/server/event.go	/^type Event struct{}$/;"	t
Info	qianzhao-tcpserver/server/event.go	/^func (this *Event) Info(conn *net.TCPConn) {$/;"	f
InnerStop	qianzhao-tcpserver/server/event.go	/^func (this *Event) InnerStop(account string) {$/;"	f
RepPing	qianzhao-tcpserver/server/event.go	/^func (this *Event) RepPing(conn *net.TCPConn) {$/;"	f
Start	qianzhao-tcpserver/server/event.go	/^func (this *Event) Start(conn *net.TCPConn, req *Request) {$/;"	f
Stop	qianzhao-tcpserver/server/event.go	/^func (this *Event) Stop(conn *net.TCPConn, req *Request) {$/;"	f
server	qianzhao-tcpserver/server/event.go	/^package server$/;"	p
AreaCodes	qianzhao-tcpserver/server/model.go	/^	ErrStopFaile       = &ErrBrand{"5004", "停止失败", ""}$/;"	v
BDInterfaceManager	qianzhao-tcpserver/server/model.go	/^type BDInterfaceManager struct{}$/;"	t
CanStart	qianzhao-tcpserver/server/model.go	/^func (this *BDInterfaceManager) CanStart(account string, addr string) Respond {$/;"	f
DEFAULT_SPEED	qianzhao-tcpserver/server/model.go	/^	USER_QUERY_PRODUCTID = "1100099900000000"$/;"	c
ErrBrand	qianzhao-tcpserver/server/model.go	/^type ErrBrand struct {$/;"	t
ErrNotAllowUP	qianzhao-tcpserver/server/model.go	/^	ErrNotJiangShuUser = &ErrBrand{"5001", "须为江苏电信校园宽带用户", ""}$/;"	v
ErrNotJiangShuUser	qianzhao-tcpserver/server/model.go	/^	ErrProgram         = &ErrBrand{"5000", "程序发生异常", ""}$/;"	v
ErrProgram	qianzhao-tcpserver/server/model.go	/^var ($/;"	v
ErrStopFaile	qianzhao-tcpserver/server/model.go	/^	ErrUpFaile         = &ErrBrand{"5004", "提速失败", ""}$/;"	v
ErrTimeOut	qianzhao-tcpserver/server/model.go	/^	ErrNotAllowUP      = &ErrBrand{"5002", "当前宽带环境不满足提速条件", ""}$/;"	v
ErrUpFaile	qianzhao-tcpserver/server/model.go	/^	ErrTimeOut         = &ErrBrand{"5003", "体验时间已结束", ""}$/;"	v
ItemuserResponses	qianzhao-tcpserver/server/model.go	/^type ItemuserResponses struct {$/;"	t
QOS_QUERY_URL	qianzhao-tcpserver/server/model.go	/^	DEFAULT_SPEED        = 1024 * 30 * 1.0 \/\/ 单位kb$/;"	c
QosQuery	qianzhao-tcpserver/server/model.go	/^func (this *BDInterfaceManager) QosQuery(reqQos RequestQos, method string) *ErrBrand {$/;"	f
QosStartBody	qianzhao-tcpserver/server/model.go	/^type QosStartBody struct {$/;"	t
QosStartEnvelope	qianzhao-tcpserver/server/model.go	/^type QosStartEnvelope struct {$/;"	t
QosStopBody	qianzhao-tcpserver/server/model.go	/^type QosStopBody struct {$/;"	t
QosStopEnvelope	qianzhao-tcpserver/server/model.go	/^type QosStopEnvelope struct {$/;"	t
RequestQos	qianzhao-tcpserver/server/model.go	/^type RequestQos struct {$/;"	t
StartQosResponse	qianzhao-tcpserver/server/model.go	/^type StartQosResponse struct {$/;"	t
StartQosReturn	qianzhao-tcpserver/server/model.go	/^type StartQosReturn struct {$/;"	t
Stop	qianzhao-tcpserver/server/model.go	/^func (this *BDInterfaceManager) Stop(account string, area string, addr string) Respond {$/;"	f
StopQosResponse	qianzhao-tcpserver/server/model.go	/^type StopQosResponse struct {$/;"	t
StopQosReturn	qianzhao-tcpserver/server/model.go	/^type StopQosReturn struct {$/;"	t
USER_QUERY_PRODUCTID	qianzhao-tcpserver/server/model.go	/^	USER_QUERY_URL       = "http:\/\/js.vnet.cn\/ProvinceForSPSearchUserName\/services\/ProvinceForSPSearchUserName?wsdl"$/;"	c
USER_QUERY_URL	qianzhao-tcpserver/server/model.go	/^const ($/;"	c
UserBody	qianzhao-tcpserver/server/model.go	/^type UserBody struct {$/;"	t
UserData	qianzhao-tcpserver/server/model.go	/^type UserData struct {$/;"	t
UserEnvelope	qianzhao-tcpserver/server/model.go	/^type UserEnvelope struct {$/;"	t
UserInfo	qianzhao-tcpserver/server/model.go	/^type UserInfo struct {$/;"	t
UserResponses	qianzhao-tcpserver/server/model.go	/^type UserResponses struct {$/;"	t
canOpen	qianzhao-tcpserver/server/model.go	/^func (this *BDInterfaceManager) canOpen(account string, addr string) *ErrBrand {$/;"	f
createQosSOAPXML	qianzhao-tcpserver/server/model.go	/^func createQosSOAPXML(data RequestQos, method string) string {$/;"	f
createUserSOAPXml	qianzhao-tcpserver/server/model.go	/^func createUserSOAPXml(productid string, ip string) string {$/;"	f
getUserProductResponse	qianzhao-tcpserver/server/model.go	/^type getUserProductResponse struct {$/;"	t
server	qianzhao-tcpserver/server/model.go	/^package server$/;"	p
userQuery	qianzhao-tcpserver/server/model.go	/^func (this *BDInterfaceManager) userQuery(addr string) (*UserData, *ErrBrand) {$/;"	f
Addr	qianzhao-tcpserver/server/server.go	/^func (s *Server) Addr() net.Addr {$/;"	f
ConnectionsCounter	qianzhao-tcpserver/server/server.go	/^func (s *Server) ConnectionsCounter() int {$/;"	f
GetAccountConnManager	qianzhao-tcpserver/server/server.go	/^func (s *Server) GetAccountConnManager() *AccountConnManager {$/;"	f
GetAccountManager	qianzhao-tcpserver/server/server.go	/^func (s *Server) GetAccountManager() *AccountManager {$/;"	f
ListenerFD	qianzhao-tcpserver/server/server.go	/^func (s *Server) ListenerFD() (uintptr, error) {$/;"	f
New	qianzhao-tcpserver/server/server.go	/^func New(logger *logger.Logger, host string, port string) (*Server, error) {$/;"	f
NewFromFD	qianzhao-tcpserver/server/server.go	/^func NewFromFD(logger *logger.Logger, fd uintptr) (*Server, error) {$/;"	f
PROTOCOL_HEAD	qianzhao-tcpserver/server/server.go	/^const ($/;"	c
ProtocolPack	qianzhao-tcpserver/server/server.go	/^func ProtocolPack(data []byte) []byte {$/;"	f
ProtocolUnPack	qianzhao-tcpserver/server/server.go	/^func ProtocolUnPack(data []byte) []byte {$/;"	f
Server	qianzhao-tcpserver/server/server.go	/^type Server struct {$/;"	t
StartAcceptLoop	qianzhao-tcpserver/server/server.go	/^func (s *Server) StartAcceptLoop() {$/;"	f
Stop	qianzhao-tcpserver/server/server.go	/^func (s *Server) Stop() {$/;"	f
Wait	qianzhao-tcpserver/server/server.go	/^func (s *Server) Wait() {$/;"	f
WaitTimeoutError	qianzhao-tcpserver/server/server.go	/^var WaitTimeoutError = errors.New("timeout")$/;"	v
WaitWithTimeout	qianzhao-tcpserver/server/server.go	/^func (s *Server) WaitWithTimeout(duration time.Duration) error {$/;"	f
accountManager	qianzhao-tcpserver/server/server.go	/^	connManager    = NewAccountConnManager()$/;"	v
connManager	qianzhao-tcpserver/server/server.go	/^var ($/;"	v
handleConn	qianzhao-tcpserver/server/server.go	/^func (s *Server) handleConn(conn *net.TCPConn) {$/;"	f
server	qianzhao-tcpserver/server/server.go	/^package server$/;"	p
Get	qianzhao/common/captcha/pic.go	/^func Get(w http.ResponseWriter, req *http.Request) string {$/;"	f
Image	qianzhao/common/captcha/pic.go	/^type Image struct {$/;"	t
New	qianzhao/common/captcha/pic.go	/^func New() string {$/;"	f
NewImage	qianzhao/common/captcha/pic.go	/^func NewImage(digits []byte, width, height int) *Image {$/;"	f
NewLen	qianzhao/common/captcha/pic.go	/^func NewLen(length int) string {$/;"	f
NewLenChars	qianzhao/common/captcha/pic.go	/^func NewLenChars(length int, chars []byte) string {$/;"	f
StdChars	qianzhao/common/captcha/pic.go	/^var StdChars = []byte("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789")$/;"	v
StdLen	qianzhao/common/captcha/pic.go	/^const ($/;"	c
UUIDLen	qianzhao/common/captcha/pic.go	/^	StdLen = 16$/;"	c
WriteTo	qianzhao/common/captcha/pic.go	/^func (img *Image) WriteTo(w io.Writer) (int64, error) {$/;"	f
blackChar	qianzhao/common/captcha/pic.go	/^	fontHeight = 8$/;"	c
calculateSizes	qianzhao/common/captcha/pic.go	/^func (img *Image) calculateSizes(width, height, ncount int) {$/;"	f
captcha	qianzhao/common/captcha/pic.go	/^package captcha$/;"	p
drawCircle	qianzhao/common/captcha/pic.go	/^func (img *Image) drawCircle(color color.Color, x, y, radius int) {$/;"	f
drawDigit	qianzhao/common/captcha/pic.go	/^func (img *Image) drawDigit(digit []byte, x, y int) {$/;"	f
drawHorizLine	qianzhao/common/captcha/pic.go	/^func (img *Image) drawHorizLine(color color.Color, fromX, toX, y int) {$/;"	f
fillWithCircles	qianzhao/common/captcha/pic.go	/^func (img *Image) fillWithCircles(n, maxradius int) {$/;"	f
font	qianzhao/common/captcha/pic.go	/^var font = [][]byte{$/;"	v
fontHeight	qianzhao/common/captcha/pic.go	/^	fontWidth  = 5$/;"	c
fontWidth	qianzhao/common/captcha/pic.go	/^const ($/;"	c
init	qianzhao/common/captcha/pic.go	/^func init() {$/;"	f
max3	qianzhao/common/captcha/pic.go	/^func max3(x, y, z uint8) (o uint8) {$/;"	f
maxSkew	qianzhao/common/captcha/pic.go	/^	stdHeight = 40$/;"	c
min3	qianzhao/common/captcha/pic.go	/^func min3(x, y, z uint8) (o uint8) {$/;"	f
rnd	qianzhao/common/captcha/pic.go	/^func rnd(from, to int) int {$/;"	f
setRandomBrightness	qianzhao/common/captcha/pic.go	/^func setRandomBrightness(c *color.NRGBA, max uint8) {$/;"	f
stdHeight	qianzhao/common/captcha/pic.go	/^	stdWidth  = 100$/;"	c
stdWidth	qianzhao/common/captcha/pic.go	/^const ($/;"	c
strikeThrough	qianzhao/common/captcha/pic.go	/^func (img *Image) strikeThrough() {$/;"	f
Config	qianzhao/common/config/config.go	/^var ($/;"	v
GetDB	qianzhao/common/config/config.go	/^func GetDB() *ini.Section {$/;"	f
GetDefault	qianzhao/common/config/config.go	/^func GetDefault() *ini.Section {$/;"	f
GetInterface	qianzhao/common/config/config.go	/^func GetInterface() *ini.Section {$/;"	f
GetRedis	qianzhao/common/config/config.go	/^func GetRedis() *ini.Section {$/;"	f
config	qianzhao/common/config/config.go	/^package config$/;"	p
err	qianzhao/common/config/config.go	/^	Config *ini.File$/;"	v
init	qianzhao/common/config/config.go	/^func init() {$/;"	f
CheckBcrypt	qianzhao/common/function/func.go	/^func CheckBcrypt(data []byte, pwd []byte) bool {$/;"	f
GetBasePath	qianzhao/common/function/func.go	/^func GetBasePath() string {$/;"	f
GetBcrypt	qianzhao/common/function/func.go	/^func GetBcrypt(data []byte) string {$/;"	f
GetIP	qianzhao/common/function/func.go	/^func GetIP(ctx *echo.Context) string {$/;"	f
GetPost	qianzhao/common/function/func.go	/^func GetPost(ctx *echo.Context, name string) string {$/;"	f
GetRand	qianzhao/common/function/func.go	/^func GetRand(b int, e int) int {$/;"	f
GetTimeUnix	qianzhao/common/function/func.go	/^func GetTimeUnix() string {$/;"	f
function	qianzhao/common/function/func.go	/^package function$/;"	p
CONTROLLER_CODE_ERROR	qianzhao/common/global/const.go	/^const ($/;"	c
CONTROLLER_CODE_SUCCESS	qianzhao/common/global/const.go	/^	CONTROLLER_CODE_ERROR   = "3xx"$/;"	c
CONTROLLER_EBIT_NOPARAM	qianzhao/common/global/const.go	/^const ($/;"	c
CONTROLLER_EBIT_NOSPEEDUPCONDITION	qianzhao/common/global/const.go	/^	CONTROLLER_EBIT_REQUEST_TIMEOUT    = "抱歉，本次请求超时，请稍后重试"$/;"	c
CONTROLLER_EBIT_REQUESTFAILE	qianzhao/common/global/const.go	/^	CONTROLLER_EBIT_NOPARAM            = "缺少参数!"$/;"	c
CONTROLLER_EBIT_REQUEST_TIMEOUT	qianzhao/common/global/const.go	/^	CONTROLLER_EBIT_SPEEDTFAILE        = "提速失败!!!"$/;"	c
CONTROLLER_EBIT_SIGNERROR	qianzhao/common/global/const.go	/^	CONTROLLER_EBIT_NOSPEEDUPCONDITION = "抱歉，您的运行环境不符合加速条件"$/;"	c
CONTROLLER_EBIT_SPEEDTFAILE	qianzhao/common/global/const.go	/^	CONTROLLER_EBIT_REQUESTFAILE       = "请求失败!"$/;"	c
CONTROLLER_FAVORITE_NOCONTENT	qianzhao/common/global/const.go	/^const ($/;"	c
CONTROLLER_FAVORITE_NOUPLOADCONTENT	qianzhao/common/global/const.go	/^	CONTROLLER_FAVORITE_NOCONTENT       = "无内容!"$/;"	c
CONTROLLER_INTERFACE_ERROR_CODE_DATA	qianzhao/common/global/const.go	/^	CONTROLLER_INTERFACE_ERROR_MSG_PROGRAM  = "对不起，接口程序发生异常，请稍后再试"$/;"	c
CONTROLLER_INTERFACE_ERROR_CODE_HEADER	qianzhao/common/global/const.go	/^const ($/;"	c
CONTROLLER_INTERFACE_ERROR_CODE_PROGRAM	qianzhao/common/global/const.go	/^	CONTROLLER_INTERFACE_ERROR_MSG_HEADER   = "对不起，您无权限访问"$/;"	c
CONTROLLER_INTERFACE_ERROR_MSG_DATA	qianzhao/common/global/const.go	/^	CONTROLLER_INTERFACE_ERROR_CODE_DATA    = "1003"$/;"	c
CONTROLLER_INTERFACE_ERROR_MSG_HEADER	qianzhao/common/global/const.go	/^	CONTROLLER_INTERFACE_ERROR_CODE_HEADER  = "1001"$/;"	c
CONTROLLER_INTERFACE_ERROR_MSG_PROGRAM	qianzhao/common/global/const.go	/^	CONTROLLER_INTERFACE_ERROR_CODE_PROGRAM = "1002"$/;"	c
CONTROLLER_USER_BANDWITH_ACTIONERROR	qianzhao/common/global/const.go	/^	CONTROLLER_USER_NEEDLOGIN                 = "need login!"$/;"	c
CONTROLLER_USER_BANDWITH_BANDWITHERROR	qianzhao/common/global/const.go	/^	CONTROLLER_USER_BANDWITH_ACTIONERROR      = "action wrong!"$/;"	c
CONTROLLER_USER_BANDWITH_BANDWITHPWDERROR	qianzhao/common/global/const.go	/^	CONTROLLER_USER_BANDWITH_BANDWITHERROR    = "bandwith wrong!"$/;"	c
CONTROLLER_USER_BANDWITH_NEEDAPPUID	qianzhao/common/global/const.go	/^	CONTROLLER_USER_BANDWITH_NOMESSAGE        = "No message!"$/;"	c
CONTROLLER_USER_BANDWITH_NOMESSAGE	qianzhao/common/global/const.go	/^	CONTROLLER_USER_BANDWITH_BANDWITHPWDERROR = "bandwith_pwd wrong"$/;"	c
CONTROLLER_USER_BANDWITH_NOTEXISTBRAND	qianzhao/common/global/const.go	/^	CONTROLLER_USER_BANDWITH_NEEDAPPUID       = "需要请求参数app_uid"$/;"	c
CONTROLLER_USER_CHECK_ERROR	qianzhao/common/global/const.go	/^	CONTROLLER_USER_LOGIN_SUCCESS             = "用户登录成功"$/;"	c
CONTROLLER_USER_LOGINOUT	qianzhao/common/global/const.go	/^	CONTROLLER_USER_LOGIN_FIRST               = "请先登陆!"$/;"	c
CONTROLLER_USER_LOGIN_FIRST	qianzhao/common/global/const.go	/^	CONTROLLER_USER_REGISTER_ERROR            = "注册失败!"$/;"	c
CONTROLLER_USER_LOGIN_SUCCESS	qianzhao/common/global/const.go	/^	CONTROLLER_USER_NOT_EXIST                 = "用户名不存在,请注册或者联系客服!"$/;"	c
CONTROLLER_USER_NEEDLOGIN	qianzhao/common/global/const.go	/^	CONTROLLER_USER_LOGINOUT                  = "用户已注销!"$/;"	c
CONTROLLER_USER_NOT_EXIST	qianzhao/common/global/const.go	/^const ($/;"	c
CONTROLLER_USER_REGISTER_ERROR	qianzhao/common/global/const.go	/^	CONTROLLER_USER_REGISTER_SUCCESS          = "注册成功!"$/;"	c
CONTROLLER_USER_REGISTER_REF_ERROR	qianzhao/common/global/const.go	/^	CONTROLLER_USER_REGISTER_REF_SUCCESS      = "注册或关联成功!"$/;"	c
CONTROLLER_USER_REGISTER_REF_SUCCESS	qianzhao/common/global/const.go	/^	CONTROLLER_USER_USERNAME_EXIST_ERROR      = "该邮箱已被注册使用!"$/;"	c
CONTROLLER_USER_REGISTER_SUCCESS	qianzhao/common/global/const.go	/^	CONTROLLER_USER_REGISTER_REF_ERROR        = "一些不知名的错误,注册或关联失败!"$/;"	c
CONTROLLER_USER_USERNAME_EXIST_ERROR	qianzhao/common/global/const.go	/^	CONTROLLER_USER_USERPWD_ERROR             = "用户名或密码错误!"$/;"	c
CONTROLLER_USER_USERPWD_ERROR	qianzhao/common/global/const.go	/^	CONTROLLER_USER_CHECK_ERROR               = "验证出错!"$/;"	c
SESSION_USER_INFO	qianzhao/common/global/const.go	/^const ($/;"	c
global	qianzhao/common/global/const.go	/^package global$/;"	p
UserBody	qianzhao/common/global/struct.go	/^type UserBody struct {$/;"	t
UserEnvelope	qianzhao/common/global/struct.go	/^type UserEnvelope struct {$/;"	t
getUserProductResponse	qianzhao/common/global/struct.go	/^type getUserProductResponse struct {$/;"	t
global	qianzhao/common/global/struct.go	/^package global$/;"	p
Get	qianzhao/common/redis/redis.go	/^func Get() redis.Conn {$/;"	f
init	qianzhao/common/redis/redis.go	/^func init() {$/;"	f
pool	qianzhao/common/redis/redis.go	/^var ($/;"	v
redis	qianzhao/common/redis/redis.go	/^package redis$/;"	p
GetSession	qianzhao/common/session/session.go	/^func GetSession(ctx *echo.Context) (session.SessionStore, error) {$/;"	f
globalSessions	qianzhao/common/session/session.go	/^var globalSessions *session.Manager$/;"	v
init	qianzhao/common/session/session.go	/^func init() {$/;"	f
session	qianzhao/common/session/session.go	/^package session$/;"	p
Base	qianzhao/controller/base.go	/^type Base struct {$/;"	t
IsLogin	qianzhao/controller/base.go	/^func (this *Base) IsLogin(ctx *echo.Context) (bool, error) {$/;"	f
controller	qianzhao/controller/base.go	/^package controller$/;"	p
BroadBand	qianzhao/controller/broadband.go	/^type BroadBand struct {$/;"	t
DEFAULT_SPEED	qianzhao/controller/broadband.go	/^	USER_QUERY_PRODUCTID = "1100099900000000"$/;"	c
ErrBrand	qianzhao/controller/broadband.go	/^type ErrBrand struct {$/;"	t
ErrNotAllowUP	qianzhao/controller/broadband.go	/^	ErrNotJiangShuUser = &ErrBrand{"5001", "须为江苏电信校园宽带用户"}$/;"	v
ErrNotJiangShuUser	qianzhao/controller/broadband.go	/^	ErrProgram         = &ErrBrand{"5000", "程序发生异常"}$/;"	v
ErrProgram	qianzhao/controller/broadband.go	/^var ($/;"	v
ErrTimeOut	qianzhao/controller/broadband.go	/^	ErrNotAllowUP      = &ErrBrand{"5002", "当前宽带环境不满足提速条件"}$/;"	v
ResetTime	qianzhao/controller/broadband.go	/^func (this *BroadBand) ResetTime(ctx *echo.Context) error {$/;"	f
Start	qianzhao/controller/broadband.go	/^func (this *BroadBand) Start(ctx *echo.Context) error {$/;"	f
Stop	qianzhao/controller/broadband.go	/^func (this *BroadBand) Stop(ctx *echo.Context) error {$/;"	f
USER_QUERY_PRODUCTID	qianzhao/controller/broadband.go	/^	USER_QUERY_URL       = "http:\/\/js.vnet.cn\/ProvinceForSPSearchUserName\/services\/ProvinceForSPSearchUserName?wsdl"$/;"	c
USER_QUERY_URL	qianzhao/controller/broadband.go	/^const ($/;"	c
UserData	qianzhao/controller/broadband.go	/^type UserData struct {$/;"	t
UserQuery	qianzhao/controller/broadband.go	/^func (this *BroadBand) UserQuery(ctx *echo.Context) (*UserData, *ErrBrand) {$/;"	f
controller	qianzhao/controller/broadband.go	/^package controller$/;"	p
createUserSOAPXml	qianzhao/controller/broadband.go	/^func createUserSOAPXml(productid string, ip string) string {$/;"	f
APP_KEY	qianzhao/controller/ebit.go	/^const ($/;"	c
APP_SECRET	qianzhao/controller/ebit.go	/^	APP_KEY       = "APP_MSB704PU"$/;"	c
EBIT_BASE_URL	qianzhao/controller/ebit.go	/^	APP_SECRET    = "mv6oy8f2qo0l0ogvxnm02tM7"$/;"	c
Ebit	qianzhao/controller/ebit.go	/^type Ebit struct {$/;"	t
SpeedupCheck	qianzhao/controller/ebit.go	/^func (this *Ebit) SpeedupCheck(ctx *echo.Context) error {$/;"	f
SpeedupOpen	qianzhao/controller/ebit.go	/^func (this *Ebit) SpeedupOpen(ctx *echo.Context) error {$/;"	f
SpeedupOpenCheck	qianzhao/controller/ebit.go	/^func (this *Ebit) SpeedupOpenCheck(ctx *echo.Context) error {$/;"	f
TaskQuery	qianzhao/controller/ebit.go	/^func TaskQuery(taskId string) map[string]interface{} {$/;"	f
controller	qianzhao/controller/ebit.go	/^package controller$/;"	p
getSecret	qianzhao/controller/ebit.go	/^func getSecret(timestamp string) string {$/;"	f
BackupFavorite	qianzhao/controller/favorite.go	/^func (this *Favorite) BackupFavorite(ctx *echo.Context) error {$/;"	f
Favorite	qianzhao/controller/favorite.go	/^type Favorite struct {$/;"	t
GetFavorite	qianzhao/controller/favorite.go	/^func (this *Favorite) GetFavorite(ctx *echo.Context) error {$/;"	f
controller	qianzhao/controller/favorite.go	/^package controller$/;"	p
Alert	qianzhao/controller/feedback.go	/^func Alert(err string) string {$/;"	f
FeedBack	qianzhao/controller/feedback.go	/^type FeedBack struct {$/;"	t
Index	qianzhao/controller/feedback.go	/^func (this *FeedBack) Index(ctx *echo.Context) error {$/;"	f
Pic	qianzhao/controller/feedback.go	/^func (this *FeedBack) Pic(ctx *echo.Context) error {$/;"	f
Post	qianzhao/controller/feedback.go	/^func (this *FeedBack) Post(ctx *echo.Context) error {$/;"	f
UploadPic	qianzhao/controller/feedback.go	/^func UploadPic(ctx *echo.Context) (string, error) {$/;"	f
controller	qianzhao/controller/feedback.go	/^package controller$/;"	p
Index	qianzhao/controller/index.go	/^type Index struct {$/;"	t
Update	qianzhao/controller/index.go	/^func (this *Index) Update(ctx *echo.Context) error {$/;"	f
controller	qianzhao/controller/index.go	/^package controller$/;"	p
AccountList	qianzhao/controller/interface.go	/^func (this *Interfacer) AccountList(ctx *echo.Context) error {$/;"	f
Interfacer	qianzhao/controller/interface.go	/^type Interfacer struct{}$/;"	t
JsonReturn	qianzhao/controller/interface.go	/^type JsonReturn struct {$/;"	t
checkSafe	qianzhao/controller/interface.go	/^func (this *Interfacer) checkSafe(ctx *echo.Context) (bool, error) {$/;"	f
controller	qianzhao/controller/interface.go	/^package controller$/;"	p
Operate	qianzhao/controller/operate.go	/^type Operate struct {$/;"	t
SpeedupPrepare	qianzhao/controller/operate.go	/^func (this *Operate) SpeedupPrepare(ctx *echo.Context) error {$/;"	f
controller	qianzhao/controller/operate.go	/^package controller$/;"	p
DayActivity	qianzhao/controller/statistics.go	/^func (this *Statistics) DayActivity(ctx *echo.Context) error {$/;"	f
Download	qianzhao/controller/statistics.go	/^func (this *Statistics) Download(ctx *echo.Context) error {$/;"	f
SideBar	qianzhao/controller/statistics.go	/^func (this *Statistics) SideBar(ctx *echo.Context) error {$/;"	f
Statistics	qianzhao/controller/statistics.go	/^type Statistics struct {$/;"	t
controller	qianzhao/controller/statistics.go	/^package controller$/;"	p
decode	qianzhao/controller/statistics.go	/^func (this *Statistics) decode(v string) (string, error) {$/;"	f
getAccountByIp	qianzhao/controller/statistics.go	/^func (this *Statistics) getAccountByIp(ctx *echo.Context) string {$/;"	f
getCityByIp	qianzhao/controller/statistics.go	/^func (this *Statistics) getCityByIp(ip string) string {$/;"	f
Edit	qianzhao/controller/user.go	/^func (this *User) Edit(ctx *echo.Context) error {$/;"	f
GetBandwith	qianzhao/controller/user.go	/^func (this *User) GetBandwith(ctx *echo.Context) error {$/;"	f
IsLogin	qianzhao/controller/user.go	/^func (this *User) IsLogin(ctx *echo.Context) error {$/;"	f
Login	qianzhao/controller/user.go	/^func (this *User) Login(ctx *echo.Context) error {$/;"	f
LoginOut	qianzhao/controller/user.go	/^func (this *User) LoginOut(ctx *echo.Context) error {$/;"	f
MemberCenter	qianzhao/controller/user.go	/^func (this *User) MemberCenter(ctx *echo.Context) error {$/;"	f
Register	qianzhao/controller/user.go	/^func (this *User) Register(ctx *echo.Context) error {$/;"	f
SpeedTest	qianzhao/controller/user.go	/^func (this *User) SpeedTest(ctx *echo.Context) error {$/;"	f
User	qianzhao/controller/user.go	/^type User struct {$/;"	t
VerifyBandwith	qianzhao/controller/user.go	/^func (this *User) VerifyBandwith(ctx *echo.Context) error {$/;"	f
controller	qianzhao/controller/user.go	/^package controller$/;"	p
APP_VERSION	qianzhao/main.go	/^const ($/;"	c
Render	qianzhao/main.go	/^func (t *Template) Render(w io.Writer, name string, data interface{}) error {$/;"	f
Template	qianzhao/main.go	/^type Template struct {$/;"	t
flagParse	qianzhao/main.go	/^func flagParse() {$/;"	f
init	qianzhao/main.go	/^func init() {$/;"	f
loginit	qianzhao/main.go	/^func loginit() {$/;"	f
main	qianzhao/main.go	/^func main() {$/;"	f
main	qianzhao/main.go	/^package main$/;"	p
AccountExist	qianzhao/model/brandaccout.go	/^func (this *BrandAccount) AccountExist(ba BrandAccount) bool {$/;"	f
AddBroadBand	qianzhao/model/brandaccout.go	/^func (this *BrandAccount) AddBroadBand(ba BrandAccount) bool {$/;"	f
BROAD_TABLE_NAME	qianzhao/model/brandaccout.go	/^const ($/;"	c
BrandAccount	qianzhao/model/brandaccout.go	/^type BrandAccount struct {$/;"	t
EditAccount	qianzhao/model/brandaccout.go	/^func (this *BrandAccount) EditAccount(ba BrandAccount) bool {$/;"	f
GetAccountInfo	qianzhao/model/brandaccout.go	/^func (this *BrandAccount) GetAccountInfo(account string) (BrandAccount, error) {$/;"	f
ResetTime	qianzhao/model/brandaccout.go	/^func (this *BrandAccount) ResetTime() {$/;"	f
model	qianzhao/model/brandaccout.go	/^package model$/;"	p
AddRecord	qianzhao/model/dayactivity.go	/^func (this *DayActivity) AddRecord(dl *DayActivity) bool {$/;"	f
DayActivity	qianzhao/model/dayactivity.go	/^type DayActivity struct {$/;"	t
TABLE_NAME_DAYACTIVITY	qianzhao/model/dayactivity.go	/^const ($/;"	c
model	qianzhao/model/dayactivity.go	/^package model$/;"	p
AddRecord	qianzhao/model/download.go	/^func (this *Download) AddRecord(dl *Download) bool {$/;"	f
Download	qianzhao/model/download.go	/^type Download struct {$/;"	t
TABLE_NAME_DOWNLOAD	qianzhao/model/download.go	/^const ($/;"	c
model	qianzhao/model/download.go	/^package model$/;"	p
FAVORITE_TABLE_NAME	qianzhao/model/favorite.go	/^const ($/;"	c
Favorite	qianzhao/model/favorite.go	/^type Favorite struct {$/;"	t
GetFavorite	qianzhao/model/favorite.go	/^func (this *Favorite) GetFavorite(uid string) (f Favorite) {$/;"	f
SaveFavorite	qianzhao/model/favorite.go	/^func (this *Favorite) SaveFavorite(f Favorite) bool {$/;"	f
model	qianzhao/model/favorite.go	/^package model$/;"	p
AddRecord	qianzhao/model/feedback.go	/^func (this *FeedBack) AddRecord(fb *FeedBack) bool {$/;"	f
CheckData	qianzhao/model/feedback.go	/^func (this *FeedBack) CheckData(fb *FeedBack) error {$/;"	f
FeedBack	qianzhao/model/feedback.go	/^type FeedBack struct {$/;"	t
TABLE_NAME_FEEDBACK	qianzhao/model/feedback.go	/^const ($/;"	c
getFields	qianzhao/model/feedback.go	/^func getFields(f interface{}) []string {$/;"	f
model	qianzhao/model/feedback.go	/^package model$/;"	p
init	qianzhao/model/init.go	/^func init() {$/;"	f
model	qianzhao/model/init.go	/^package model$/;"	p
myorm	qianzhao/model/init.go	/^var ($/;"	v
AddRecord	qianzhao/model/sidebar.go	/^func (this *SideBar) AddRecord(dl *SideBar) bool {$/;"	f
SideBar	qianzhao/model/sidebar.go	/^type SideBar struct {$/;"	t
TABLE_NAME_SIDEBAR	qianzhao/model/sidebar.go	/^const ($/;"	c
model	qianzhao/model/sidebar.go	/^package model$/;"	p
GetBrandWith	qianzhao/model/user.go	/^func (this *User) GetBrandWith(app_uid string) (u User) {$/;"	f
USER_TABLE_NAME	qianzhao/model/user.go	/^const ($/;"	c
Update	qianzhao/model/user.go	/^func (this *User) Update(values map[string]interface{}, wheres map[string]interface{}) bool {$/;"	f
User	qianzhao/model/user.go	/^type User struct {$/;"	t
UserExist	qianzhao/model/user.go	/^func (this *User) UserExist(name string, pwd string) bool {$/;"	f
UserInfo	qianzhao/model/user.go	/^func (this *User) UserInfo(name string) (u User) {$/;"	f
UserNameExist	qianzhao/model/user.go	/^func (this *User) UserNameExist(name string) bool {$/;"	f
UserRegister	qianzhao/model/user.go	/^func (this *User) UserRegister(name string, password string) bool {$/;"	f
VerifyBandWith	qianzhao/model/user.go	/^func (this *User) VerifyBandWith(bandwith string, bandwith_pwd string) (app_uid string) {$/;"	f
make_app_uid	qianzhao/model/user.go	/^func make_app_uid(bandwith string, bandwith_pwd string, timestamp string) string {$/;"	f
model	qianzhao/model/user.go	/^package model$/;"	p
Update	qianzhao/model/version.go	/^func (this *Version) Update(version string, btype string) VersionExt {$/;"	f
VERSION_TABLE_NAME	qianzhao/model/version.go	/^const ($/;"	c
Version	qianzhao/model/version.go	/^type Version struct {$/;"	t
VersionExt	qianzhao/model/version.go	/^type VersionExt struct {$/;"	t
model	qianzhao/model/version.go	/^package model$/;"	p
doAnmi	qianzhao/public/scripts/topspeed.js	/^function doAnmi() {\/\/执行旋转动画$/;"	f
setH	qianzhao/public/scripts/topspeed.js	/^    function setH(i, cbk) {$/;"	f	function:doAnmi
setS	qianzhao/public/scripts/topspeed.js	/^    function setS(i, cbk) {$/;"	f	function:doAnmi
R	qianzhao/public/tab/js/iepng.js	/^            'T' : 1,$/;"	p	class:dC
T	qianzhao/public/tab/js/iepng.js	/^            c = {$/;"	p	class:c
T	qianzhao/public/tab/js/iepng.js	/^        dC = {$/;"	p	class:dC
W	qianzhao/public/tab/js/iepng.js	/^        size = {$/;"	p	class:size
X	qianzhao/public/tab/js/iepng.js	/^        altC = {$/;"	p	class:altC
X	qianzhao/public/tab/js/iepng.js	/^        bg = {$/;"	p	class:bg
Y	qianzhao/public/tab/js/iepng.js	/^            'X' : 0,$/;"	p	class:bg
blur	qianzhao/public/tab/js/iepng.js	/^                focus : 'handlePseudoHover',$/;"	p	class:moreForAs
borderColor	qianzhao/public/tab/js/iepng.js	/^            'borderWidth' : true,$/;"	p	class:styles
borderStyle	qianzhao/public/tab/js/iepng.js	/^        styles = {$/;"	p	class:styles
borderWidth	qianzhao/public/tab/js/iepng.js	/^            'borderStyle' : true,$/;"	p	class:styles
color	qianzhao/public/tab/js/iepng.js	/^        el.vml = {$/;"	p	class:el.vml
focus	qianzhao/public/tab/js/iepng.js	/^                mouseenter : 'handlePseudoHover',$/;"	p	class:moreForAs
handler	qianzhao/public/tab/js/iepng.js	/^            if (handlers.hasOwnProperty(h)) {$/;"	f
imgLoaded	qianzhao/public/tab/js/iepng.js	/^                img.runtimeStyle.cssText = 'behavior:none; position:absolute; left:-10000px; top:-10000px; border:none; margin:0; padding:0;';$/;"	c
imgSize	qianzhao/public/tab/js/iepng.js	/^    ns : 'DD_belatedPNG',$/;"	p	class:DD_belatedPNG
lib	qianzhao/public/tab/js/iepng.js	/^        var lib, els, nodeStr, v, e;$/;"	v
makeVisible	qianzhao/public/tab/js/iepng.js	/^        fudge = (size.L + size.bLW == 1) ? 1 : 0;$/;"	f
mouseenter	qianzhao/public/tab/js/iepng.js	/^                mouseleave : 'handlePseudoHover',$/;"	p	class:moreForAs
mouseleave	qianzhao/public/tab/js/iepng.js	/^            moreForAs = {$/;"	p	class:moreForAs
move	qianzhao/public/tab/js/iepng.js	/^            resize : 'vmlOffsets',$/;"	p	class:handlers
ns	qianzhao/public/tab/js/iepng.js	/^var DD_belatedPNG = {$/;"	p	class:DD_belatedPNG
resize	qianzhao/public/tab/js/iepng.js	/^        handlers = {$/;"	p	class:handlers
shape	qianzhao/public/tab/js/iepng.js	/^        els = {$/;"	p	class:els
close	qianzhao/public/tab/js/laytpl.js	/^;!function(){"use strict";var f,b={open:"{{",close:"}}"},c={exp:function(a){return new RegExp(a,"g")},query:function(a,c,e){var f=["#([\\\\s\\\\S])+?","([^{#}])*?"][a||0];return d((c||"")+b.open+f+b.close+(e||""))},escape:function(a){return String(a||"").replace(\/&(?!#?[a-zA-Z0-9]+;)\/g,"&amp;").replace(\/<\/g,"&lt;").replace(\/>\/g,"&gt;").replace(\/'\/g,"&#39;").replace(\/"\/g,"&quot;")},error:function(a,b){var c="Laytpl Error：";return"object"==typeof console&&console.error(c+a+"\\n"+(b||"")),c+a}},d=c.exp,e=function(a){this.tpl=a};e.pt=e.prototype,e.pt.parse=function(a,e){var f=this,g=a,h=d("^"+b.open+"#",""),i=d(b.close+"$","");a=a.replace(\/[\\r\\t\\n]\/g," ").replace(d(b.open+"#"),b.open+"# ").replace(d(b.close+"}"),"} "+b.close).replace(\/\\\\\/g,"\\\\\\\\").replace(\/(?="|')\/g,"\\\\").replace(c.query(),function(a){return a=a.replace(h,"").replace(i,""),'";'+a.replace(\/\\\\\/g,"")+'; view+="'}).replace(c.query(1),function(a){var c='"+(';return a.replace(\/\\s\/g,"")===b.open+b.close?"":(a=a.replace(d(b.open+"|"+b.close),""),\/^=\/.test(a)&&(a=a.replace(\/^=\/,""),c='"+_escape_('),c+a.replace(\/\\\\\/g,"")+')+"')}),a='"use strict";var view = "'+a+'";return view;';try{return f.cache=a=new Function("d, _escape_",a),a(e,c.escape)}catch(j){return delete f.cache,c.error(j,g)}},e.pt.render=function(a,b){var e,d=this;return a?(e=d.cache?d.cache(a,c.escape):d.parse(d.tpl,a),b?(b(e),void 0):e):c.error("no data")},f=function(a){return"string"!=typeof a?c.error("Template not found"):new e(a)},f.config=function(a){a=a||{};for(var c in a)b[c]=a[c]},f.v="1.1","function"==typeof define?define(function(){return f}):"undefined"!=typeof exports?module.exports=f:window.laytpl=f}();/;"	p	class:f
escape	qianzhao/public/tab/js/laytpl.js	/^;!function(){"use strict";var f,b={open:"{{",close:"}}"},c={exp:function(a){return new RegExp(a,"g")},query:function(a,c,e){var f=["#([\\\\s\\\\S])+?","([^{#}])*?"][a||0];return d((c||"")+b.open+f+b.close+(e||""))},escape:function(a){return String(a||"").replace(\/&(?!#?[a-zA-Z0-9]+;)\/g,"&amp;").replace(\/<\/g,"&lt;").replace(\/>\/g,"&gt;").replace(\/'\/g,"&#39;").replace(\/"\/g,"&quot;")},error:function(a,b){var c="Laytpl Error：";return"object"==typeof console&&console.error(c+a+"\\n"+(b||"")),c+a}},d=c.exp,e=function(a){this.tpl=a};e.pt=e.prototype,e.pt.parse=function(a,e){var f=this,g=a,h=d("^"+b.open+"#",""),i=d(b.close+"$","");a=a.replace(\/[\\r\\t\\n]\/g," ").replace(d(b.open+"#"),b.open+"# ").replace(d(b.close+"}"),"} "+b.close).replace(\/\\\\\/g,"\\\\\\\\").replace(\/(?="|')\/g,"\\\\").replace(c.query(),function(a){return a=a.replace(h,"").replace(i,""),'";'+a.replace(\/\\\\\/g,"")+'; view+="'}).replace(c.query(1),function(a){var c='"+(';return a.replace(\/\\s\/g,"")===b.open+b.close?"":(a=a.replace(d(b.open+"|"+b.close),""),\/^=\/.test(a)&&(a=a.replace(\/^=\/,""),c='"+_escape_('),c+a.replace(\/\\\\\/g,"")+')+"')}),a='"use strict";var view = "'+a+'";return view;';try{return f.cache=a=new Function("d, _escape_",a),a(e,c.escape)}catch(j){return delete f.cache,c.error(j,g)}},e.pt.render=function(a,b){var e,d=this;return a?(e=d.cache?d.cache(a,c.escape):d.parse(d.tpl,a),b?(b(e),void 0):e):c.error("no data")},f=function(a){return"string"!=typeof a?c.error("Template not found"):new e(a)},f.config=function(a){a=a||{};for(var c in a)b[c]=a[c]},f.v="1.1","function"==typeof define?define(function(){return f}):"undefined"!=typeof exports?module.exports=f:window.laytpl=f}();/;"	m
exp	qianzhao/public/tab/js/laytpl.js	/^;!function(){"use strict";var f,b={open:"{{",close:"}}"},c={exp:function(a){return new RegExp(a,"g")},query:function(a,c,e){var f=["#([\\\\s\\\\S])+?","([^{#}])*?"][a||0];return d((c||"")+b.open+f+b.close+(e||""))},escape:function(a){return String(a||"").replace(\/&(?!#?[a-zA-Z0-9]+;)\/g,"&amp;").replace(\/<\/g,"&lt;").replace(\/>\/g,"&gt;").replace(\/'\/g,"&#39;").replace(\/"\/g,"&quot;")},error:function(a,b){var c="Laytpl Error：";return"object"==typeof console&&console.error(c+a+"\\n"+(b||"")),c+a}},d=c.exp,e=function(a){this.tpl=a};e.pt=e.prototype,e.pt.parse=function(a,e){var f=this,g=a,h=d("^"+b.open+"#",""),i=d(b.close+"$","");a=a.replace(\/[\\r\\t\\n]\/g," ").replace(d(b.open+"#"),b.open+"# ").replace(d(b.close+"}"),"} "+b.close).replace(\/\\\\\/g,"\\\\\\\\").replace(\/(?="|')\/g,"\\\\").replace(c.query(),function(a){return a=a.replace(h,"").replace(i,""),'";'+a.replace(\/\\\\\/g,"")+'; view+="'}).replace(c.query(1),function(a){var c='"+(';return a.replace(\/\\s\/g,"")===b.open+b.close?"":(a=a.replace(d(b.open+"|"+b.close),""),\/^=\/.test(a)&&(a=a.replace(\/^=\/,""),c='"+_escape_('),c+a.replace(\/\\\\\/g,"")+')+"')}),a='"use strict";var view = "'+a+'";return view;';try{return f.cache=a=new Function("d, _escape_",a),a(e,c.escape)}catch(j){return delete f.cache,c.error(j,g)}},e.pt.render=function(a,b){var e,d=this;return a?(e=d.cache?d.cache(a,c.escape):d.parse(d.tpl,a),b?(b(e),void 0):e):c.error("no data")},f=function(a){return"string"!=typeof a?c.error("Template not found"):new e(a)},f.config=function(a){a=a||{};for(var c in a)b[c]=a[c]},f.v="1.1","function"==typeof define?define(function(){return f}):"undefined"!=typeof exports?module.exports=f:window.laytpl=f}();/;"	m
open	qianzhao/public/tab/js/laytpl.js	/^;!function(){"use strict";var f,b={open:"{{",close:"}}"},c={exp:function(a){return new RegExp(a,"g")},query:function(a,c,e){var f=["#([\\\\s\\\\S])+?","([^{#}])*?"][a||0];return d((c||"")+b.open+f+b.close+(e||""))},escape:function(a){return String(a||"").replace(\/&(?!#?[a-zA-Z0-9]+;)\/g,"&amp;").replace(\/<\/g,"&lt;").replace(\/>\/g,"&gt;").replace(\/'\/g,"&#39;").replace(\/"\/g,"&quot;")},error:function(a,b){var c="Laytpl Error：";return"object"==typeof console&&console.error(c+a+"\\n"+(b||"")),c+a}},d=c.exp,e=function(a){this.tpl=a};e.pt=e.prototype,e.pt.parse=function(a,e){var f=this,g=a,h=d("^"+b.open+"#",""),i=d(b.close+"$","");a=a.replace(\/[\\r\\t\\n]\/g," ").replace(d(b.open+"#"),b.open+"# ").replace(d(b.close+"}"),"} "+b.close).replace(\/\\\\\/g,"\\\\\\\\").replace(\/(?="|')\/g,"\\\\").replace(c.query(),function(a){return a=a.replace(h,"").replace(i,""),'";'+a.replace(\/\\\\\/g,"")+'; view+="'}).replace(c.query(1),function(a){var c='"+(';return a.replace(\/\\s\/g,"")===b.open+b.close?"":(a=a.replace(d(b.open+"|"+b.close),""),\/^=\/.test(a)&&(a=a.replace(\/^=\/,""),c='"+_escape_('),c+a.replace(\/\\\\\/g,"")+')+"')}),a='"use strict";var view = "'+a+'";return view;';try{return f.cache=a=new Function("d, _escape_",a),a(e,c.escape)}catch(j){return delete f.cache,c.error(j,g)}},e.pt.render=function(a,b){var e,d=this;return a?(e=d.cache?d.cache(a,c.escape):d.parse(d.tpl,a),b?(b(e),void 0):e):c.error("no data")},f=function(a){return"string"!=typeof a?c.error("Template not found"):new e(a)},f.config=function(a){a=a||{};for(var c in a)b[c]=a[c]},f.v="1.1","function"==typeof define?define(function(){return f}):"undefined"!=typeof exports?module.exports=f:window.laytpl=f}();/;"	p	class:f
pt.render	qianzhao/public/tab/js/laytpl.js	/^;!function(){"use strict";var f,b={open:"{{",close:"}}"},c={exp:function(a){return new RegExp(a,"g")},query:function(a,c,e){var f=["#([\\\\s\\\\S])+?","([^{#}])*?"][a||0];return d((c||"")+b.open+f+b.close+(e||""))},escape:function(a){return String(a||"").replace(\/&(?!#?[a-zA-Z0-9]+;)\/g,"&amp;").replace(\/<\/g,"&lt;").replace(\/>\/g,"&gt;").replace(\/'\/g,"&#39;").replace(\/"\/g,"&quot;")},error:function(a,b){var c="Laytpl Error：";return"object"==typeof console&&console.error(c+a+"\\n"+(b||"")),c+a}},d=c.exp,e=function(a){this.tpl=a};e.pt=e.prototype,e.pt.parse=function(a,e){var f=this,g=a,h=d("^"+b.open+"#",""),i=d(b.close+"$","");a=a.replace(\/[\\r\\t\\n]\/g," ").replace(d(b.open+"#"),b.open+"# ").replace(d(b.close+"}"),"} "+b.close).replace(\/\\\\\/g,"\\\\\\\\").replace(\/(?="|')\/g,"\\\\").replace(c.query(),function(a){return a=a.replace(h,"").replace(i,""),'";'+a.replace(\/\\\\\/g,"")+'; view+="'}).replace(c.query(1),function(a){var c='"+(';return a.replace(\/\\s\/g,"")===b.open+b.close?"":(a=a.replace(d(b.open+"|"+b.close),""),\/^=\/.test(a)&&(a=a.replace(\/^=\/,""),c='"+_escape_('),c+a.replace(\/\\\\\/g,"")+')+"')}),a='"use strict";var view = "'+a+'";return view;';try{return f.cache=a=new Function("d, _escape_",a),a(e,c.escape)}catch(j){return delete f.cache,c.error(j,g)}},e.pt.render=function(a,b){var e,d=this;return a?(e=d.cache?d.cache(a,c.escape):d.parse(d.tpl,a),b?(b(e),void 0):e):c.error("no data")},f=function(a){return"string"!=typeof a?c.error("Template not found"):new e(a)},f.config=function(a){a=a||{};for(var c in a)b[c]=a[c]},f.v="1.1","function"==typeof define?define(function(){return f}):"undefined"!=typeof exports?module.exports=f:window.laytpl=f}();/;"	f
query	qianzhao/public/tab/js/laytpl.js	/^;!function(){"use strict";var f,b={open:"{{",close:"}}"},c={exp:function(a){return new RegExp(a,"g")},query:function(a,c,e){var f=["#([\\\\s\\\\S])+?","([^{#}])*?"][a||0];return d((c||"")+b.open+f+b.close+(e||""))},escape:function(a){return String(a||"").replace(\/&(?!#?[a-zA-Z0-9]+;)\/g,"&amp;").replace(\/<\/g,"&lt;").replace(\/>\/g,"&gt;").replace(\/'\/g,"&#39;").replace(\/"\/g,"&quot;")},error:function(a,b){var c="Laytpl Error：";return"object"==typeof console&&console.error(c+a+"\\n"+(b||"")),c+a}},d=c.exp,e=function(a){this.tpl=a};e.pt=e.prototype,e.pt.parse=function(a,e){var f=this,g=a,h=d("^"+b.open+"#",""),i=d(b.close+"$","");a=a.replace(\/[\\r\\t\\n]\/g," ").replace(d(b.open+"#"),b.open+"# ").replace(d(b.close+"}"),"} "+b.close).replace(\/\\\\\/g,"\\\\\\\\").replace(\/(?="|')\/g,"\\\\").replace(c.query(),function(a){return a=a.replace(h,"").replace(i,""),'";'+a.replace(\/\\\\\/g,"")+'; view+="'}).replace(c.query(1),function(a){var c='"+(';return a.replace(\/\\s\/g,"")===b.open+b.close?"":(a=a.replace(d(b.open+"|"+b.close),""),\/^=\/.test(a)&&(a=a.replace(\/^=\/,""),c='"+_escape_('),c+a.replace(\/\\\\\/g,"")+')+"')}),a='"use strict";var view = "'+a+'";return view;';try{return f.cache=a=new Function("d, _escape_",a),a(e,c.escape)}catch(j){return delete f.cache,c.error(j,g)}},e.pt.render=function(a,b){var e,d=this;return a?(e=d.cache?d.cache(a,c.escape):d.parse(d.tpl,a),b?(b(e),void 0):e):c.error("no data")},f=function(a){return"string"!=typeof a?c.error("Template not found"):new e(a)},f.config=function(a){a=a||{};for(var c in a)b[c]=a[c]},f.v="1.1","function"==typeof define?define(function(){return f}):"undefined"!=typeof exports?module.exports=f:window.laytpl=f}();/;"	m
gen_file	qianzhao/public/test.py	/^def gen_file(path, size):$/;"	f
Router	qianzhao/router/router.go	/^func Router(e *echo.Echo) {$/;"	f
router	qianzhao/router/router.go	/^package router$/;"	p
file	qianzhao/tool/whitebrand.go	/^var ($/;"	v
init	qianzhao/tool/whitebrand.go	/^func init() {$/;"	f
main	qianzhao/tool/whitebrand.go	/^func main() {$/;"	f
main	qianzhao/tool/whitebrand.go	/^package main$/;"	p
path	qianzhao/tool/whitebrand.go	/^	file   = flag.String("file", "", "数据文件")$/;"	v
prefix	qianzhao/tool/whitebrand.go	/^	path   = flag.String("path", "", "数据文件路径")$/;"	v
dochange	qianzhao/views/speed/begin.html	/^                function dochange() {$/;"	f
end	qianzhao/views/speed/begin.html	/^                function end() {$/;"	f
str	qianzhao/views/speed/begin.html	/^                function str(num) {$/;"	f
thisMovie	qianzhao/views/speed/begin.html	/^                function thisMovie(movieName) {$/;"	f
jsonReturn	rpc/common.go	/^func jsonReturn(data interface{}, err error) []byte {$/;"	f
main	rpc/common.go	/^package main$/;"	p
IniFile	rpc/server.go	/^	conf    = flag.String("conf", "db.ini", "配置文件")$/;"	v
conf	rpc/server.go	/^var ($/;"	v
init	rpc/server.go	/^func init() {$/;"	f
main	rpc/server.go	/^func main() {$/;"	f
main	rpc/server.go	/^package main$/;"	p
GetShopInfo	rpc/shop.go	/^func (this TaoShop) GetShopInfo(param string) []byte {$/;"	f
ShopInfo	rpc/shop.go	/^type ShopInfo struct {$/;"	t
TaoShop	rpc/shop.go	/^type TaoShop struct {$/;"	t
addShop	rpc/shop.go	/^func (this TaoShop) addShop(si ShopInfo) {$/;"	f
grabShopInfo	rpc/shop.go	/^func (this TaoShop) grabShopInfo(shop_url string) (si ShopInfo, err error) {$/;"	f
main	rpc/shop.go	/^package main$/;"	p
AddGoodsInfo	rpc/tcate.go	/^func AddGoodsInfo(gid string) (cid string) {$/;"	f
GetSession	rpc/tcate.go	/^func GetSession() *mgo.Session {$/;"	f
GetTag	rpc/tcate.go	/^func (this Taotag) GetTag(gid string, taokeUrl string) []byte {$/;"	f
GetTaoCat	rpc/tcate.go	/^func GetTaoCat(cid string) (map[string]interface{}, error) {$/;"	f
RedisPool	rpc/tcate.go	/^func RedisPool() *redis.Pool {$/;"	f
Taotag	rpc/tcate.go	/^type Taotag struct {$/;"	t
main	rpc/tcate.go	/^package main$/;"	p
mdbsession	rpc/tcate.go	/^var ($/;"	v
mux	rpc/tcate.go	/^	mdbsession *mgo.Session$/;"	v
peoplemap	rpc/tcate.go	/^	sexmap     map[string]int = map[string]int{"中性": 0, "男": 1, "女": 2}$/;"	v
sexmap	rpc/tcate.go	/^	mux        sync.Mutex$/;"	v
clientStub	rpc/test.go	/^type clientStub struct {$/;"	t
main	rpc/test.go	/^package main$/;"	p
main1	rpc/test.go	/^func main1() {$/;"	f
GetRedisPool	rtb/main.go	/^func GetRedisPool() *redis.Pool {$/;"	f
GetSession	rtb/main.go	/^func GetSession() *mgo.Session {$/;"	f
IniFile	rtb/main.go	/^	conf       = flag.String("conf", "", "配置文件")$/;"	v
conf	rtb/main.go	/^var ($/;"	v
err	rtb/main.go	/^	IniFile    *ini.File$/;"	v
getKeyWord	rtb/main.go	/^func getKeyWord(ad string) (string, error) {$/;"	f
getRand	rtb/main.go	/^func getRand(ary []int) int {$/;"	f
httpclient	rtb/main.go	/^	pool       *redis.Pool$/;"	v
init	rtb/main.go	/^func init() {$/;"	f
main	rtb/main.go	/^func main() {$/;"	f
main	rtb/main.go	/^package main$/;"	p
mdbsession	rtb/main.go	/^	stotal     uint64$/;"	v
mux	rtb/main.go	/^	httpclient http.Client$/;"	v
pool	rtb/main.go	/^	err        error$/;"	v
recordAdUa	rtb/main.go	/^func recordAdUa(param map[string]string) {$/;"	f
reponsePrice	rtb/main.go	/^func reponsePrice(param map[string]string) {$/;"	f
requestPrice	rtb/main.go	/^func requestPrice(w http.ResponseWriter, r *http.Request) {$/;"	f
rtotal	rtb/main.go	/^	mux        sync.Mutex$/;"	v
stotal	rtb/main.go	/^	rtotal     uint64$/;"	v
main	tags/main.go	/^func main() {$/;"	f
main	tags/main.go	/^package main$/;"	p
AddGoodsInfo	tags/model.go	/^func AddGoodsInfo(gid string) (info map[string]string) {$/;"	f
AddShopInfo	tags/model.go	/^func AddShopInfo(param map[string]string) {$/;"	f
AddUidCids	tags/model.go	/^func AddUidCids(param map[string]string) {$/;"	f
GetTaoCat	tags/model.go	/^func GetTaoCat(cid string) (map[string]interface{}, error) {$/;"	f
main	tags/model.go	/^package main$/;"	p
peoplemap	tags/model.go	/^	sexmap    map[string]int = map[string]int{"中性": 0, "男": 1, "女": 2}$/;"	v
sexmap	tags/model.go	/^var ($/;"	v
tagFrequencyRecord	tags/model.go	/^func tagFrequencyRecord(cookie string, cids string) {$/;"	f
Bootstrap	tags/ptag.go	/^func Bootstrap(px string) {$/;"	f
Dispath	tags/ptag.go	/^func Dispath(data url.Values) {$/;"	f
GetSession	tags/ptag.go	/^func GetSession() *mgo.Session {$/;"	f
RedisPool	tags/ptag.go	/^func RedisPool() *redis.Pool {$/;"	f
checkGoodsExist	tags/ptag.go	/^func checkGoodsExist(gid string) (res map[string]string, err error) {$/;"	f
checkShopExist	tags/ptag.go	/^func checkShopExist(shopid string) bool {$/;"	f
conf	tags/ptag.go	/^var ($/;"	v
cookie	tags/ptag.go	/^	qsauth   = ""$/;"	v
err	tags/ptag.go	/^	mux        sync.Mutex$/;"	v
httpsqsQueue	tags/ptag.go	/^func httpsqsQueue(px string) url.Values {$/;"	f
iniFile	tags/ptag.go	/^	err        error$/;"	v
init	tags/ptag.go	/^func init() {$/;"	f
main	tags/ptag.go	/^package main$/;"	p
mdbsession	tags/ptag.go	/^	prefix   = ""$/;"	v
modb	tags/ptag.go	/^	mopwd    = ""$/;"	v
mohost	tags/ptag.go	/^	rport    = ""$/;"	v
moport	tags/ptag.go	/^	mohost   = ""$/;"	v
mopwd	tags/ptag.go	/^	mouser   = ""$/;"	v
mouser	tags/ptag.go	/^	moport   = ""$/;"	v
mux	tags/ptag.go	/^	mdbsession *mgo.Session = nil$/;"	v
prefix	tags/ptag.go	/^	rediskey = ""$/;"	v
qsauth	tags/ptag.go	/^	qsname   = ""$/;"	v
qshost	tags/ptag.go	/^	modb     = ""$/;"	v
qsname	tags/ptag.go	/^	qsport   = ""$/;"	v
qsport	tags/ptag.go	/^	qshost   = ""$/;"	v
redisQueue	tags/ptag.go	/^func redisQueue(px string) url.Values {$/;"	f
rediskey	tags/ptag.go	/^	cookie   = ""$/;"	v
rhost	tags/ptag.go	/^	conf     = flag.String("conf", "conf.ini", "配置文件")$/;"	v
rpool	tags/ptag.go	/^	iniFile    *goconfig.ConfigFile$/;"	v
rport	tags/ptag.go	/^	rhost    = ""$/;"	v
sqsClient	tags/ptag.go	/^	rpool      *redis.Pool$/;"	v
GetSession	taocat/data.go	/^func GetSession() *mgo.Session {$/;"	f
importData	taocat/data.go	/^func importData() {$/;"	f
main	taocat/data.go	/^func main() {$/;"	f
main	taocat/data.go	/^package main$/;"	p
mdbsession	taocat/data.go	/^var ($/;"	v
mo_db	taocat/data.go	/^	mo_port    = "27017"$/;"	v
mo_host	taocat/data.go	/^	mo_pwd     = "123456"$/;"	v
mo_port	taocat/data.go	/^	mo_host    = "192.168.1.199"$/;"	v
mo_pwd	taocat/data.go	/^	mo_user    = "xu"$/;"	v
mo_table	taocat/data.go	/^	mo_db      = "xu_precise"$/;"	v
mo_user	taocat/data.go	/^	mdbsession *mgo.Session$/;"	v
Category	taocat/display.go	/^type Category struct {$/;"	t
GetSession	taocat/display.go	/^func GetSession() *mgo.Session {$/;"	f
catTree	taocat/display.go	/^func catTree(data []Category, pid string) []Category {$/;"	f
display	taocat/display.go	/^func display(data []Category, level int, prefix string) {$/;"	f
getAllCatroy	taocat/display.go	/^func getAllCatroy() []Category {$/;"	f
main	taocat/display.go	/^func main() {$/;"	f
main	taocat/display.go	/^package main$/;"	p
mdbsession	taocat/display.go	/^var ($/;"	v
mo_db	taocat/display.go	/^	mo_port    = "27017"$/;"	v
mo_host	taocat/display.go	/^	mo_pwd     = "123456"$/;"	v
mo_port	taocat/display.go	/^	mo_host    = "192.168.1.199"$/;"	v
mo_pwd	taocat/display.go	/^	mo_user    = "xu"$/;"	v
mo_table	taocat/display.go	/^	mo_db      = "xu_precise"$/;"	v
mo_user	taocat/display.go	/^	mdbsession *mgo.Session$/;"	v
queryCategory	taocat/display.go	/^func queryCategory(list []Category, sid string) []Category {$/;"	f
Category	taocat/main.go	/^type Category struct {$/;"	t
FirstLevelCategory	taocat/main.go	/^func FirstLevelCategory(path string, sid string) []Category {$/;"	f
GetSession	taocat/main.go	/^func GetSession() *mgo.Session {$/;"	f
SecondLevelCategory	taocat/main.go	/^func SecondLevelCategory(path string, sid string, level int) []Category {$/;"	f
TAO_CAT_URL	taocat/main.go	/^const ($/;"	c
addRecord	taocat/main.go	/^func addRecord(list []Category, pid string) {$/;"	f
grabHtml	taocat/main.go	/^func grabHtml(path string, sid string) string {$/;"	f
main	taocat/main.go	/^func main() {$/;"	f
main	taocat/main.go	/^package main$/;"	p
mdbsession	taocat/main.go	/^var ($/;"	v
mo_db	taocat/main.go	/^	mo_port    = "27017"$/;"	v
mo_host	taocat/main.go	/^	mo_pwd     = "123456"$/;"	v
mo_port	taocat/main.go	/^	mo_host    = "192.168.1.199"$/;"	v
mo_pwd	taocat/main.go	/^	mo_user    = "xu"$/;"	v
mo_table	taocat/main.go	/^	mo_db      = "xu_precise"$/;"	v
mo_user	taocat/main.go	/^	mdbsession *mgo.Session$/;"	v
Proxy	tool/httpsqsProxy.go	/^func Proxy(w http.ResponseWriter, r *http.Request) {$/;"	f
PushData	tool/httpsqsProxy.go	/^func PushData(topic string, body []byte) error {$/;"	f
auth	tool/httpsqsProxy.go	/^	nsqport = flag.String("nsq_port", "4150", "nsq端口")$/;"	v
err	tool/httpsqsProxy.go	/^	nsqpro  *nsq.Producer$/;"	v
host	tool/httpsqsProxy.go	/^var ($/;"	v
init	tool/httpsqsProxy.go	/^func init() {$/;"	f
initNsq	tool/httpsqsProxy.go	/^func initNsq() {$/;"	f
main	tool/httpsqsProxy.go	/^func main() {$/;"	f
main	tool/httpsqsProxy.go	/^package main$/;"	p
nsqhost	tool/httpsqsProxy.go	/^	port    = flag.String("port", "1219", "http绑定端口")$/;"	v
nsqport	tool/httpsqsProxy.go	/^	nsqhost = flag.String("nsq_host", "127.0.0.1", "nsq地址")$/;"	v
nsqpro	tool/httpsqsProxy.go	/^	auth    = flag.String("auth", "", "验证密码")$/;"	v
port	tool/httpsqsProxy.go	/^	host    = flag.String("host", "127.0.0.1", "http绑定地址")$/;"	v
conf	tool/mongo_export_import.go	/^var ($/;"	v
err	tool/mongo_export_import.go	/^	iniFile *ini.File$/;"	v
getLocalSesssion	tool/mongo_export_import.go	/^func getLocalSesssion() *mgo.Session {$/;"	f
getMongo	tool/mongo_export_import.go	/^func getMongo(url string, f func() (net.Conn, error)) (*mgo.Session, error) {$/;"	f
getRemoteSession	tool/mongo_export_import.go	/^func getRemoteSession(client *ossh.Client) *mgo.Session {$/;"	f
iniFile	tool/mongo_export_import.go	/^	to = flag.String("to", "1", "数据导入方向，1：远程到本地，2：本地到远程")$/;"	v
init	tool/mongo_export_import.go	/^func init() {$/;"	f
linker	tool/mongo_export_import.go	/^	err     error$/;"	v
local_mongo_db	tool/mongo_export_import.go	/^	local_mongo_port  = flag.String("local_mongo_port", "", "本地mongo_port")$/;"	v
local_mongo_host	tool/mongo_export_import.go	/^	remote_mongo_table = flag.String("remote_mongo_table", "", "远程mongo_collection")$/;"	v
local_mongo_port	tool/mongo_export_import.go	/^	local_mongo_host  = flag.String("local_mongo_host", "", "本地mongo_host")$/;"	v
local_mongo_pwd	tool/mongo_export_import.go	/^	local_mongo_user  = flag.String("local_mongo_user", "", "本地mongo_user")$/;"	v
local_mongo_table	tool/mongo_export_import.go	/^	local_mongo_pwd   = flag.String("local_mongo_pwd", "", "本地mongo_pwd")$/;"	v
local_mongo_user	tool/mongo_export_import.go	/^	local_mongo_db    = flag.String("local_mongo_db", "", "本地mongo_db")$/;"	v
local_to_remote	tool/mongo_export_import.go	/^func local_to_remote(rsession *mgo.Session, lsession *mgo.Session) {$/;"	f
main	tool/mongo_export_import.go	/^func main() {$/;"	f
main	tool/mongo_export_import.go	/^package main$/;"	p
remote_host	tool/mongo_export_import.go	/^	conf        = flag.String("conf", "", "配置文件")$/;"	v
remote_key	tool/mongo_export_import.go	/^	remote_user = flag.String("remote_user", "root", "宿主机用户")$/;"	v
remote_mongo_db	tool/mongo_export_import.go	/^	remote_mongo_port  = flag.String("remote_mongo_port", "", "远程mongo_port")$/;"	v
remote_mongo_host	tool/mongo_export_import.go	/^	remote_key  = flag.String("remote_key", "", "本机的ssh私钥")$/;"	v
remote_mongo_port	tool/mongo_export_import.go	/^	remote_mongo_host  = flag.String("remote_mongo_host", "", "远程mongo_host")$/;"	v
remote_mongo_pwd	tool/mongo_export_import.go	/^	remote_mongo_user  = flag.String("remote_mongo_user", "", "远程mongo_user")$/;"	v
remote_mongo_table	tool/mongo_export_import.go	/^	remote_mongo_pwd   = flag.String("remote_mongo_pwd", "", "远程mongo_pwd")$/;"	v
remote_mongo_user	tool/mongo_export_import.go	/^	remote_mongo_db    = flag.String("remote_mongo_db", "", "远程mongo_db")$/;"	v
remote_to_local	tool/mongo_export_import.go	/^func remote_to_local(rsession *mgo.Session, lsession *mgo.Session) {$/;"	f
remote_user	tool/mongo_export_import.go	/^	remote_host = flag.String("remote_host", "122.225.98.69", "宿主机")$/;"	v
to	tool/mongo_export_import.go	/^	local_mongo_table = flag.String("local_mongo_table", "", "本地mongo_collection")$/;"	v
RedisPool	transpond/main.go	/^func RedisPool() *redis.Pool {$/;"	f
conf	transpond/main.go	/^var ($/;"	v
dispath	transpond/main.go	/^func dispath(data string, uri string) {$/;"	f
err	transpond/main.go	/^	rport string$/;"	v
fdate	transpond/main.go	/^	conf  = flag.String("conf", "conf.ini", "配置文件")$/;"	v
ini	transpond/main.go	/^	fdate = flag.String("date", "", "读取文件时间")$/;"	v
init	transpond/main.go	/^func init() {$/;"	f
main	transpond/main.go	/^func main() {$/;"	f
main	transpond/main.go	/^package main$/;"	p
pool	transpond/main.go	/^	err   error$/;"	v
readFile	transpond/main.go	/^func readFile() {$/;"	f
rhost	transpond/main.go	/^	ini   *goconfig.ConfigFile$/;"	v
rport	transpond/main.go	/^	rhost string$/;"	v
sendData	transpond/main.go	/^func sendData(param url.Values) {$/;"	f
host	webp/client.go	/^	inputFile = flag.String("infile", "", "input file")$/;"	v
init	webp/client.go	/^func init() {$/;"	f
inputFile	webp/client.go	/^var ($/;"	v
main	webp/client.go	/^func main() {$/;"	f
main	webp/client.go	/^package main$/;"	p
newfileUploadRequest	webp/client.go	/^func newfileUploadRequest(uri string, params map[string]string, paramName, path string) (*http.Request, error) {$/;"	f
port	webp/client.go	/^	host      = flag.String("host", "", "host url")$/;"	v
postFile	webp/client.go	/^func postFile(filePath string, host string) (string, error) {$/;"	f
readFile	webp/client.go	/^func readFile(name string) ([]byte, error) {$/;"	f
host	webp/server.go	/^var ($/;"	v
init	webp/server.go	/^func init() {$/;"	f
main	webp/server.go	/^func main() {$/;"	f
main	webp/server.go	/^package main$/;"	p
port	webp/server.go	/^	host = flag.String("host", "127.0.0.1", "host url")$/;"	v
